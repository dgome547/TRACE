{
  "version": 3,
  "sources": ["../../esm-env/true.js", "../../svelte/src/internal/client/warnings.js"],
  "sourcesContent": ["export default true;\r\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\r\n\r\nimport { DEV } from 'esm-env';\r\n\r\nvar bold = 'font-weight: bold';\r\nvar normal = 'font-weight: normal';\r\n\r\n/**\r\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\r\n * @param {string} property\r\n * @param {string} location\r\n */\r\nexport function assignment_value_stale(property, location) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\r\n\t}\r\n}\r\n\r\n/**\r\n * `%binding%` (%location%) is binding to a non-reactive property\r\n * @param {string} binding\r\n * @param {string | undefined | null} [location]\r\n */\r\nexport function binding_property_non_reactive(binding, location) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\r\n * @param {string} method\r\n */\r\nexport function console_log_state(method) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\r\n\t}\r\n}\r\n\r\n/**\r\n * %handler% should be a function. Did you mean to %suggestion%?\r\n * @param {string} handler\r\n * @param {string} suggestion\r\n */\r\nexport function event_handler_invalid(handler, suggestion) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\r\n * @param {string} attribute\r\n * @param {string} html\r\n * @param {string} value\r\n */\r\nexport function hydration_attribute_changed(attribute, html, value) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\r\n * @param {string | undefined | null} [location]\r\n */\r\nexport function hydration_html_changed(location) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\r\n * @param {string | undefined | null} [location]\r\n */\r\nexport function hydration_mismatch(location) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\r\n */\r\nexport function invalid_raw_snippet_render() {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\r\n * @param {string} filename\r\n */\r\nexport function legacy_recursive_reactive_block(filename) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Tried to unmount a component that was not mounted\r\n */\r\nexport function lifecycle_double_unmount() {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\r\n\t}\r\n}\r\n\r\n/**\r\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\r\n * @param {string} parent\r\n * @param {string} child\r\n * @param {string} owner\r\n */\r\nexport function ownership_invalid_binding(parent, child, owner) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\r\n\t}\r\n}\r\n\r\n/**\r\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\r\n * @param {string | undefined | null} [component]\r\n * @param {string | undefined | null} [owner]\r\n */\r\nexport function ownership_invalid_mutation(component, owner) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\r\n * @param {string} operator\r\n */\r\nexport function state_proxy_equality_mismatch(operator) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The `slide` transition does not work correctly for elements with `display: %value%`\r\n * @param {string} value\r\n */\r\nexport function transition_slide_display(value) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\r\n\t}\r\n}"],
  "mappings": "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",
  "names": []
}
