{
  "version": 3,
  "sources": ["../../svelte/src/internal/shared/utils.js", "../../svelte/src/internal/client/constants.js", "../../svelte/src/internal/client/errors.js", "../../svelte/src/constants.js", "../../svelte/src/internal/shared/warnings.js", "../../svelte/src/internal/shared/clone.js", "../../svelte/src/internal/client/dom/task.js", "../../svelte/src/internal/client/reactivity/equality.js", "../../svelte/src/internal/client/dev/ownership.js", "../../svelte/src/internal/shared/errors.js", "../../svelte/src/internal/client/context.js", "../../svelte/src/internal/client/reactivity/sources.js", "../../svelte/src/internal/client/reactivity/deriveds.js", "../../svelte/src/internal/client/dom/hydration.js", "../../svelte/src/internal/client/proxy.js", "../../svelte/src/internal/client/dev/equality.js", "../../svelte/src/internal/client/dom/operations.js", "../../svelte/src/internal/client/runtime.js", "../../svelte/src/internal/client/reactivity/effects.js", "../../svelte/src/internal/client/dev/tracing.js", "../../svelte/src/internal/client/dom/elements/misc.js", "../../svelte/src/internal/client/dom/elements/bindings/shared.js", "../../svelte/src/internal/client/dom/elements/events.js"],
  "sourcesContent": ["// Store the references to globals in case someone tries to monkey patch these, causing the below\r\n// to de-opt (this occurs often when using popular extensions).\r\nexport var is_array = Array.isArray;\r\nexport var index_of = Array.prototype.indexOf;\r\nexport var array_from = Array.from;\r\nexport var object_keys = Object.keys;\r\nexport var define_property = Object.defineProperty;\r\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\r\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\r\nexport var object_prototype = Object.prototype;\r\nexport var array_prototype = Array.prototype;\r\nexport var get_prototype_of = Object.getPrototypeOf;\r\n\r\n/**\r\n * @param {any} thing\r\n * @returns {thing is Function}\r\n */\r\nexport function is_function(thing) {\r\n\treturn typeof thing === 'function';\r\n}\r\n\r\nexport const noop = () => {};\r\n\r\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\r\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\r\n\r\n/**\r\n * @template [T=any]\r\n * @param {any} value\r\n * @returns {value is PromiseLike<T>}\r\n */\r\nexport function is_promise(value) {\r\n\treturn typeof value?.then === 'function';\r\n}\r\n\r\n/** @param {Function} fn */\r\nexport function run(fn) {\r\n\treturn fn();\r\n}\r\n\r\n/** @param {Array<() => void>} arr */\r\nexport function run_all(arr) {\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tarr[i]();\r\n\t}\r\n}\r\n\r\n/**\r\n * TODO replace with Promise.withResolvers once supported widely enough\r\n * @template T\r\n */\r\nexport function deferred() {\r\n\t/** @type {(value: T) => void} */\r\n\tvar resolve;\r\n\r\n\t/** @type {(reason: any) => void} */\r\n\tvar reject;\r\n\r\n\t/** @type {Promise<T>} */\r\n\tvar promise = new Promise((res, rej) => {\r\n\t\tresolve = res;\r\n\t\treject = rej;\r\n\t});\r\n\r\n\t// @ts-expect-error\r\n\treturn { promise, resolve, reject };\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {V} value\r\n * @param {V | (() => V)} fallback\r\n * @param {boolean} [lazy]\r\n * @returns {V}\r\n */\r\nexport function fallback(value, fallback, lazy = false) {\r\n\treturn value === undefined\r\n\t\t? lazy\r\n\t\t\t? /** @type {() => V} */ (fallback)()\r\n\t\t\t: /** @type {V} */ (fallback)\r\n\t\t: value;\r\n}\r\n", "export const DERIVED = 1 << 1;\r\nexport const EFFECT = 1 << 2;\r\nexport const RENDER_EFFECT = 1 << 3;\r\nexport const BLOCK_EFFECT = 1 << 4;\r\nexport const BRANCH_EFFECT = 1 << 5;\r\nexport const ROOT_EFFECT = 1 << 6;\r\nexport const BOUNDARY_EFFECT = 1 << 7;\r\nexport const UNOWNED = 1 << 8;\r\nexport const DISCONNECTED = 1 << 9;\r\nexport const CLEAN = 1 << 10;\r\nexport const DIRTY = 1 << 11;\r\nexport const MAYBE_DIRTY = 1 << 12;\r\nexport const INERT = 1 << 13;\r\nexport const DESTROYED = 1 << 14;\r\nexport const EFFECT_RAN = 1 << 15;\r\n/** 'Transparent' effects do not create a transition boundary */\r\nexport const EFFECT_TRANSPARENT = 1 << 16;\r\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\r\nexport const LEGACY_DERIVED_PROP = 1 << 17;\r\nexport const INSPECT_EFFECT = 1 << 18;\r\nexport const HEAD_EFFECT = 1 << 19;\r\nexport const EFFECT_HAS_DERIVED = 1 << 20;\r\n\r\nexport const STATE_SYMBOL = Symbol('$state');\r\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\r\nexport const LEGACY_PROPS = Symbol('legacy props');\r\nexport const LOADING_ATTR_SYMBOL = Symbol('');\r\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\r\n\r\nimport { DEV } from 'esm-env';\r\n\r\n/**\r\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\r\n * @returns {never}\r\n */\r\nexport function bind_invalid_checkbox_value() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\r\n * @param {string} component\r\n * @param {string} key\r\n * @param {string} name\r\n * @returns {never}\r\n */\r\nexport function bind_invalid_export(component, key, name) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\r\n\t}\r\n}\r\n\r\n/**\r\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\r\n * @param {string} key\r\n * @param {string} component\r\n * @param {string} name\r\n * @returns {never}\r\n */\r\nexport function bind_not_bindable(key, component, name) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\r\n\t}\r\n}\r\n\r\n/**\r\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\r\n * @param {string} parent\r\n * @param {string} method\r\n * @param {string} component\r\n * @returns {never}\r\n */\r\nexport function component_api_changed(parent, method, component) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\r\n * @param {string} component\r\n * @param {string} name\r\n * @returns {never}\r\n */\r\nexport function component_api_invalid_new(component, name) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\r\n\t}\r\n}\r\n\r\n/**\r\n * A derived value cannot reference itself recursively\r\n * @returns {never}\r\n */\r\nexport function derived_references_self() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\r\n * @param {string} a\r\n * @param {string} b\r\n * @param {string | undefined | null} [value]\r\n * @returns {never}\r\n */\r\nexport function each_key_duplicate(a, b, value) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\r\n\t}\r\n}\r\n\r\n/**\r\n * `%rune%` cannot be used inside an effect cleanup function\r\n * @param {string} rune\r\n * @returns {never}\r\n */\r\nexport function effect_in_teardown(rune) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\r\n * @returns {never}\r\n */\r\nexport function effect_in_unowned_derived() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\r\n\t}\r\n}\r\n\r\n/**\r\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\r\n * @param {string} rune\r\n * @returns {never}\r\n */\r\nexport function effect_orphan(rune) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\r\n * @returns {never}\r\n */\r\nexport function effect_update_depth_exceeded() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Failed to hydrate the application\r\n * @returns {never}\r\n */\r\nexport function hydration_failed() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\r\n * @returns {never}\r\n */\r\nexport function invalid_snippet() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\r\n\t}\r\n}\r\n\r\n/**\r\n * `%name%(...)` cannot be used in runes mode\r\n * @param {string} name\r\n * @returns {never}\r\n */\r\nexport function lifecycle_legacy_only(name) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\r\n * @param {string} key\r\n * @returns {never}\r\n */\r\nexport function props_invalid_value(key) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Rest element properties of `$props()` such as `%property%` are readonly\r\n * @param {string} property\r\n * @returns {never}\r\n */\r\nexport function props_rest_readonly(property) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\r\n * @param {string} rune\r\n * @returns {never}\r\n */\r\nexport function rune_outside_svelte(rune) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\r\n * @returns {never}\r\n */\r\nexport function state_descriptors_fixed() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Cannot set prototype of `$state` object\r\n * @returns {never}\r\n */\r\nexport function state_prototype_fixed() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\r\n * @returns {never}\r\n */\r\nexport function state_unsafe_local_read() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\r\n * @returns {never}\r\n */\r\nexport function state_unsafe_mutation() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\r\n\t}\r\n}", "export const EACH_ITEM_REACTIVE = 1;\r\nexport const EACH_INDEX_REACTIVE = 1 << 1;\r\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\r\nexport const EACH_IS_CONTROLLED = 1 << 2;\r\nexport const EACH_IS_ANIMATED = 1 << 3;\r\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\r\n\r\nexport const PROPS_IS_IMMUTABLE = 1;\r\nexport const PROPS_IS_RUNES = 1 << 1;\r\nexport const PROPS_IS_UPDATED = 1 << 2;\r\nexport const PROPS_IS_BINDABLE = 1 << 3;\r\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\r\n\r\nexport const TRANSITION_IN = 1;\r\nexport const TRANSITION_OUT = 1 << 1;\r\nexport const TRANSITION_GLOBAL = 1 << 2;\r\n\r\nexport const TEMPLATE_FRAGMENT = 1;\r\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\r\n\r\nexport const HYDRATION_START = '[';\r\n/** used to indicate that an `{:else}...` block was rendered */\r\nexport const HYDRATION_START_ELSE = '[!';\r\nexport const HYDRATION_END = ']';\r\nexport const HYDRATION_ERROR = {};\r\n\r\nexport const ELEMENT_IS_NAMESPACED = 1;\r\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\r\n\r\nexport const UNINITIALIZED = Symbol();\r\n\r\n// Dev-time component properties\r\nexport const FILENAME = Symbol('filename');\r\nexport const HMR = Symbol('hmr');\r\n\r\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\r\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\r\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\r\n\r\n// we use a list of ignorable runtime warnings because not every runtime warning\r\n// can be ignored and we want to keep the validation for svelte-ignore in place\r\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\r\n\t'state_snapshot_uncloneable',\r\n\t'binding_property_non_reactive',\r\n\t'hydration_attribute_changed',\r\n\t'hydration_html_changed',\r\n\t'ownership_invalid_binding',\r\n\t'ownership_invalid_mutation'\r\n]);\r\n\r\n/**\r\n * Whitespace inside one of these elements will not result in\r\n * a whitespace node being created in any circumstances. (This\r\n * list is almost certainly very incomplete)\r\n * TODO this is currently unused\r\n */\r\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\r\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\r\n\r\nimport { DEV } from 'esm-env';\r\n\r\nvar bold = 'font-weight: bold';\r\nvar normal = 'font-weight: normal';\r\n\r\n/**\r\n * `<svelte:element this=\"%tag%\">` is a void element — it cannot have content\r\n * @param {string} tag\r\n */\r\nexport function dynamic_void_element_content(tag) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] dynamic_void_element_content\\n%c\\`<svelte:element this=\"${tag}\">\\` is a void element — it cannot have content\\nhttps://svelte.dev/e/dynamic_void_element_content`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/dynamic_void_element_content`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The following properties cannot be cloned with `$state.snapshot` — the return value contains the originals:\r\n * \r\n * %properties%\r\n * @param {string | undefined | null} [properties]\r\n */\r\nexport function state_snapshot_uncloneable(properties) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] state_snapshot_uncloneable\\n%c${properties\r\n\t\t\t? `The following properties cannot be cloned with \\`$state.snapshot\\` — the return value contains the originals:\r\n\r\n${properties}`\r\n\t\t\t: 'Value cannot be cloned with `$state.snapshot` — the original value was returned'}\\nhttps://svelte.dev/e/state_snapshot_uncloneable`, bold, normal);\r\n\t} else {\r\n\t\tconsole.warn(`https://svelte.dev/e/state_snapshot_uncloneable`);\r\n\t}\r\n}", "/** @import { Snapshot } from './types' */\r\nimport { DEV } from 'esm-env';\r\nimport * as w from './warnings.js';\r\nimport { get_prototype_of, is_array, object_prototype } from './utils.js';\r\n\r\n/**\r\n * In dev, we keep track of which properties could not be cloned. In prod\r\n * we don't bother, but we keep a dummy array around so that the\r\n * signature stays the same\r\n * @type {string[]}\r\n */\r\nconst empty = [];\r\n\r\n/**\r\n * @template T\r\n * @param {T} value\r\n * @param {boolean} [skip_warning]\r\n * @returns {Snapshot<T>}\r\n */\r\nexport function snapshot(value, skip_warning = false) {\r\n\tif (DEV && !skip_warning) {\r\n\t\t/** @type {string[]} */\r\n\t\tconst paths = [];\r\n\r\n\t\tconst copy = clone(value, new Map(), '', paths);\r\n\t\tif (paths.length === 1 && paths[0] === '') {\r\n\t\t\t// value could not be cloned\r\n\t\t\tw.state_snapshot_uncloneable();\r\n\t\t} else if (paths.length > 0) {\r\n\t\t\t// some properties could not be cloned\r\n\t\t\tconst slice = paths.length > 10 ? paths.slice(0, 7) : paths.slice(0, 10);\r\n\t\t\tconst excess = paths.length - slice.length;\r\n\r\n\t\t\tlet uncloned = slice.map((path) => `- <value>${path}`).join('\\n');\r\n\t\t\tif (excess > 0) uncloned += `\\n- ...and ${excess} more`;\r\n\r\n\t\t\tw.state_snapshot_uncloneable(uncloned);\r\n\t\t}\r\n\r\n\t\treturn copy;\r\n\t}\r\n\r\n\treturn clone(value, new Map(), '', empty);\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {T} value\r\n * @param {Map<T, Snapshot<T>>} cloned\r\n * @param {string} path\r\n * @param {string[]} paths\r\n * @param {null | T} original The original value, if `value` was produced from a `toJSON` call\r\n * @returns {Snapshot<T>}\r\n */\r\nfunction clone(value, cloned, path, paths, original = null) {\r\n\tif (typeof value === 'object' && value !== null) {\r\n\t\tvar unwrapped = cloned.get(value);\r\n\t\tif (unwrapped !== undefined) return unwrapped;\r\n\r\n\t\tif (value instanceof Map) return /** @type {Snapshot<T>} */ (new Map(value));\r\n\t\tif (value instanceof Set) return /** @type {Snapshot<T>} */ (new Set(value));\r\n\r\n\t\tif (is_array(value)) {\r\n\t\t\tvar copy = /** @type {Snapshot<any>} */ (Array(value.length));\r\n\t\t\tcloned.set(value, copy);\r\n\r\n\t\t\tif (original !== null) {\r\n\t\t\t\tcloned.set(original, copy);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < value.length; i += 1) {\r\n\t\t\t\tvar element = value[i];\r\n\t\t\t\tif (i in value) {\r\n\t\t\t\t\tcopy[i] = clone(element, cloned, DEV ? `${path}[${i}]` : path, paths);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn copy;\r\n\t\t}\r\n\r\n\t\tif (get_prototype_of(value) === object_prototype) {\r\n\t\t\t/** @type {Snapshot<any>} */\r\n\t\t\tcopy = {};\r\n\t\t\tcloned.set(value, copy);\r\n\r\n\t\t\tif (original !== null) {\r\n\t\t\t\tcloned.set(original, copy);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var key in value) {\r\n\t\t\t\t// @ts-expect-error\r\n\t\t\t\tcopy[key] = clone(value[key], cloned, DEV ? `${path}.${key}` : path, paths);\r\n\t\t\t}\r\n\r\n\t\t\treturn copy;\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\r\n\t\t}\r\n\r\n\t\tif (typeof (/** @type {T & { toJSON?: any } } */ (value).toJSON) === 'function') {\r\n\t\t\treturn clone(\r\n\t\t\t\t/** @type {T & { toJSON(): any } } */ (value).toJSON(),\r\n\t\t\t\tcloned,\r\n\t\t\t\tDEV ? `${path}.toJSON()` : path,\r\n\t\t\t\tpaths,\r\n\t\t\t\t// Associate the instance with the toJSON clone\r\n\t\t\t\tvalue\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tif (value instanceof EventTarget) {\r\n\t\t// can't be cloned\r\n\t\treturn /** @type {Snapshot<T>} */ (value);\r\n\t}\r\n\r\n\ttry {\r\n\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\r\n\t} catch (e) {\r\n\t\tif (DEV) {\r\n\t\t\tpaths.push(path);\r\n\t\t}\r\n\r\n\t\treturn /** @type {Snapshot<T>} */ (value);\r\n\t}\r\n}\r\n", "import { run_all } from '../../shared/utils.js';\r\n\r\n// Fallback for when requestIdleCallback is not available\r\nconst request_idle_callback =\r\n\ttypeof requestIdleCallback === 'undefined'\r\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\r\n\t\t: requestIdleCallback;\r\n\r\n/** @type {Array<() => void>} */\r\nlet micro_tasks = [];\r\n\r\n/** @type {Array<() => void>} */\r\nlet idle_tasks = [];\r\n\r\nfunction run_micro_tasks() {\r\n\tvar tasks = micro_tasks;\r\n\tmicro_tasks = [];\r\n\trun_all(tasks);\r\n}\r\n\r\nfunction run_idle_tasks() {\r\n\tvar tasks = idle_tasks;\r\n\tidle_tasks = [];\r\n\trun_all(tasks);\r\n}\r\n\r\n/**\r\n * @param {() => void} fn\r\n */\r\nexport function queue_micro_task(fn) {\r\n\tif (micro_tasks.length === 0) {\r\n\t\tqueueMicrotask(run_micro_tasks);\r\n\t}\r\n\r\n\tmicro_tasks.push(fn);\r\n}\r\n\r\n/**\r\n * @param {() => void} fn\r\n */\r\nexport function queue_idle_task(fn) {\r\n\tif (idle_tasks.length === 0) {\r\n\t\trequest_idle_callback(run_idle_tasks);\r\n\t}\r\n\r\n\tidle_tasks.push(fn);\r\n}\r\n\r\n/**\r\n * Synchronously run any queued tasks.\r\n */\r\nexport function flush_tasks() {\r\n\tif (micro_tasks.length > 0) {\r\n\t\trun_micro_tasks();\r\n\t}\r\n\r\n\tif (idle_tasks.length > 0) {\r\n\t\trun_idle_tasks();\r\n\t}\r\n}\r\n", "/** @import { Equals } from '#client' */\r\n/** @type {Equals} */\r\nexport function equals(value) {\r\n\treturn value === this.v;\r\n}\r\n\r\n/**\r\n * @param {unknown} a\r\n * @param {unknown} b\r\n * @returns {boolean}\r\n */\r\nexport function safe_not_equal(a, b) {\r\n\treturn a != a\r\n\t\t? b == b\r\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\r\n}\r\n\r\n/**\r\n * @param {unknown} a\r\n * @param {unknown} b\r\n * @returns {boolean}\r\n */\r\nexport function not_equal(a, b) {\r\n\treturn a !== b;\r\n}\r\n\r\n/** @type {Equals} */\r\nexport function safe_equals(value) {\r\n\treturn !safe_not_equal(value, this.v);\r\n}\r\n", "/** @import { ProxyMetadata } from '#client' */\r\n/** @typedef {{ file: string, line: number, column: number }} Location */\r\n\r\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\r\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\r\nimport { dev_current_component_function } from '../context.js';\r\nimport { get_prototype_of } from '../../shared/utils.js';\r\nimport * as w from '../warnings.js';\r\nimport { FILENAME, UNINITIALIZED } from '../../../constants.js';\r\n\r\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\r\nconst boundaries = {};\r\n\r\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\r\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\r\n\r\nfunction get_stack() {\r\n\tconst stack = new Error().stack;\r\n\tif (!stack) return null;\r\n\r\n\tconst entries = [];\r\n\r\n\tfor (const line of stack.split('\\n')) {\r\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\r\n\r\n\t\tif (match) {\r\n\t\t\tentries.push({\r\n\t\t\t\tfile: match[1],\r\n\t\t\t\tline: +match[2],\r\n\t\t\t\tcolumn: +match[3]\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn entries;\r\n}\r\n\r\n/**\r\n * Determines which `.svelte` component is responsible for a given state change\r\n * @returns {Function | null}\r\n */\r\nexport function get_component() {\r\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\r\n\tconst stack = get_stack()?.slice(4);\r\n\tif (!stack) return null;\r\n\r\n\tfor (let i = 0; i < stack.length; i++) {\r\n\t\tconst entry = stack[i];\r\n\t\tconst modules = boundaries[entry.file];\r\n\t\tif (!modules) {\r\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\r\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\r\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\r\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\r\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\r\n\t\t\t// called the state creator function.\r\n\t\t\tif (i === 0) return null;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tfor (const module of modules) {\r\n\t\t\tif (module.end == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\r\n\t\t\t\treturn module.component;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport const ADD_OWNER = Symbol('ADD_OWNER');\r\n\r\n/**\r\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\r\n * such that subsequent calls to `get_component` can tell us which component is responsible\r\n * for a given state change\r\n */\r\nexport function mark_module_start() {\r\n\tconst start = get_stack()?.[2];\r\n\r\n\tif (start) {\r\n\t\t(boundaries[start.file] ??= []).push({\r\n\t\t\tstart,\r\n\t\t\t// @ts-expect-error\r\n\t\t\tend: null,\r\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\r\n\t\t\tcomponent: null\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Function} component\r\n */\r\nexport function mark_module_end(component) {\r\n\tconst end = get_stack()?.[2];\r\n\r\n\tif (end) {\r\n\t\tconst boundaries_file = boundaries[end.file];\r\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\r\n\r\n\t\tboundary.end = end;\r\n\t\tboundary.component = component;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {any} object\r\n * @param {any | null} owner\r\n * @param {boolean} [global]\r\n * @param {boolean} [skip_warning]\r\n */\r\nexport function add_owner(object, owner, global = false, skip_warning = false) {\r\n\tif (object && !global) {\r\n\t\tconst component = dev_current_component_function;\r\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\r\n\t\tif (metadata && !has_owner(metadata, component)) {\r\n\t\t\tlet original = get_owner(metadata);\r\n\r\n\t\t\tif (owner && owner[FILENAME] !== component[FILENAME] && !skip_warning) {\r\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tadd_owner_to_object(object, owner, new Set());\r\n}\r\n\r\n/**\r\n * @param {() => unknown} get_object\r\n * @param {any} Component\r\n * @param {boolean} [skip_warning]\r\n */\r\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\r\n\tuser_pre_effect(() => {\r\n\t\tadd_owner(get_object(), Component, false, skip_warning);\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {any} _this\r\n * @param {Function} owner\r\n * @param {Array<() => any>} getters\r\n * @param {boolean} skip_warning\r\n */\r\nexport function add_owner_to_class(_this, owner, getters, skip_warning) {\r\n\t_this[ADD_OWNER].current ||= getters.map(() => UNINITIALIZED);\r\n\r\n\tfor (let i = 0; i < getters.length; i += 1) {\r\n\t\tconst current = getters[i]();\r\n\t\t// For performance reasons we only re-add the owner if the state has changed\r\n\t\tif (current !== _this[ADD_OWNER][i]) {\r\n\t\t\t_this[ADD_OWNER].current[i] = current;\r\n\t\t\tadd_owner(current, owner, false, skip_warning);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {ProxyMetadata | null} from\r\n * @param {ProxyMetadata} to\r\n */\r\nexport function widen_ownership(from, to) {\r\n\tif (to.owners === null) {\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile (from) {\r\n\t\tif (from.owners === null) {\r\n\t\t\tto.owners = null;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tfor (const owner of from.owners) {\r\n\t\t\tto.owners.add(owner);\r\n\t\t}\r\n\r\n\t\tfrom = from.parent;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {any} object\r\n * @param {Function | null} owner If `null`, then the object is globally owned and will not be checked\r\n * @param {Set<any>} seen\r\n */\r\nfunction add_owner_to_object(object, owner, seen) {\r\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\r\n\r\n\tif (metadata) {\r\n\t\t// this is a state proxy, add owner directly, if not globally shared\r\n\t\tif ('owners' in metadata && metadata.owners != null) {\r\n\t\t\tif (owner) {\r\n\t\t\t\tmetadata.owners.add(owner);\r\n\t\t\t} else {\r\n\t\t\t\tmetadata.owners = null;\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (object && typeof object === 'object') {\r\n\t\tif (seen.has(object)) return;\r\n\t\tseen.add(object);\r\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\r\n\t\t\t// this is a class with state fields. we put this in a render effect\r\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\r\n\t\t\t// the new state is also co-owned by the caller of `getContext`\r\n\t\t\trender_effect(() => {\r\n\t\t\t\tobject[ADD_OWNER](owner);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvar proto = get_prototype_of(object);\r\n\r\n\t\t\tif (proto === Object.prototype) {\r\n\t\t\t\t// recurse until we find a state proxy\r\n\t\t\t\tfor (const key in object) {\r\n\t\t\t\t\tif (Object.getOwnPropertyDescriptor(object, key)?.get) {\r\n\t\t\t\t\t\t// Similar to the class case; the getter could update with a new state\r\n\t\t\t\t\t\tlet current = UNINITIALIZED;\r\n\t\t\t\t\t\trender_effect(() => {\r\n\t\t\t\t\t\t\tconst next = object[key];\r\n\t\t\t\t\t\t\tif (current !== next) {\r\n\t\t\t\t\t\t\t\tcurrent = next;\r\n\t\t\t\t\t\t\t\tadd_owner_to_object(next, owner, seen);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (proto === Array.prototype) {\r\n\t\t\t\t// recurse until we find a state proxy\r\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\r\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {ProxyMetadata} metadata\r\n * @param {Function} component\r\n * @returns {boolean}\r\n */\r\nfunction has_owner(metadata, component) {\r\n\tif (metadata.owners === null) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn (\r\n\t\tmetadata.owners.has(component) ||\r\n\t\t// This helps avoid false positives when using HMR, where the component function is replaced\r\n\t\t(FILENAME in component &&\r\n\t\t\t[...metadata.owners].some(\r\n\t\t\t\t(owner) => /** @type {any} */ (owner)[FILENAME] === component[FILENAME]\r\n\t\t\t)) ||\r\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {ProxyMetadata} metadata\r\n * @returns {any}\r\n */\r\nfunction get_owner(metadata) {\r\n\treturn (\r\n\t\tmetadata?.owners?.values().next().value ??\r\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\r\n\t);\r\n}\r\n\r\nlet skip = false;\r\n\r\n/**\r\n * @param {() => any} fn\r\n */\r\nexport function skip_ownership_validation(fn) {\r\n\tskip = true;\r\n\tfn();\r\n\tskip = false;\r\n}\r\n\r\n/**\r\n * @param {ProxyMetadata} metadata\r\n */\r\nexport function check_ownership(metadata) {\r\n\tif (skip) return;\r\n\r\n\tconst component = get_component();\r\n\r\n\tif (component && !has_owner(metadata, component)) {\r\n\t\tlet original = get_owner(metadata);\r\n\r\n\t\t// @ts-expect-error\r\n\t\tif (original[FILENAME] !== component[FILENAME]) {\r\n\t\t\t// @ts-expect-error\r\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\r\n\t\t} else {\r\n\t\t\tw.ownership_invalid_mutation();\r\n\t\t}\r\n\t}\r\n}\r\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\r\n\r\nimport { DEV } from 'esm-env';\r\n\r\n/**\r\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\r\n * @returns {never}\r\n */\r\nexport function invalid_default_snippet() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\r\n\t}\r\n}\r\n\r\n/**\r\n * `%name%(...)` can only be used during component initialisation\r\n * @param {string} name\r\n * @returns {never}\r\n */\r\nexport function lifecycle_outside_component(name) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\r\n\t}\r\n}\r\n\r\n/**\r\n * `%name%` is not a store with a `subscribe` method\r\n * @param {string} name\r\n * @returns {never}\r\n */\r\nexport function store_invalid_shape(name) {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\r\n\t}\r\n}\r\n\r\n/**\r\n * The `this` prop on `<svelte:element>` must be a string, if defined\r\n * @returns {never}\r\n */\r\nexport function svelte_element_invalid_this_value() {\r\n\tif (DEV) {\r\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\r\n\r\n\t\terror.name = 'Svelte error';\r\n\t\tthrow error;\r\n\t} else {\r\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\r\n\t}\r\n}", "/** @import { ComponentContext } from '#client' */\r\n\r\nimport { DEV } from 'esm-env';\r\nimport { add_owner } from './dev/ownership.js';\r\nimport { lifecycle_outside_component } from '../shared/errors.js';\r\nimport { source } from './reactivity/sources.js';\r\nimport {\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tset_active_effect,\r\n\tset_active_reaction,\r\n\tuntrack\r\n} from './runtime.js';\r\nimport { effect, teardown } from './reactivity/effects.js';\r\nimport { legacy_mode_flag } from '../flags/index.js';\r\n\r\n/** @type {ComponentContext | null} */\r\nexport let component_context = null;\r\n\r\n/** @param {ComponentContext | null} context */\r\nexport function set_component_context(context) {\r\n\tcomponent_context = context;\r\n}\r\n\r\n/**\r\n * The current component function. Different from current component context:\r\n * ```html\r\n * <!-- App.svelte -->\r\n * <Foo>\r\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\r\n * </Foo>\r\n * ```\r\n * @type {ComponentContext['function']}\r\n */\r\nexport let dev_current_component_function = null;\r\n\r\n/** @param {ComponentContext['function']} fn */\r\nexport function set_dev_current_component_function(fn) {\r\n\tdev_current_component_function = fn;\r\n}\r\n\r\n/**\r\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\r\n * Must be called during component initialisation.\r\n *\r\n * @template T\r\n * @param {any} key\r\n * @returns {T}\r\n */\r\nexport function getContext(key) {\r\n\tconst context_map = get_or_init_context_map('getContext');\r\n\tconst result = /** @type {T} */ (context_map.get(key));\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Associates an arbitrary `context` object with the current component and the specified `key`\r\n * and returns that object. The context is then available to children of the component\r\n * (including slotted content) with `getContext`.\r\n *\r\n * Like lifecycle functions, this must be called during component initialisation.\r\n *\r\n * @template T\r\n * @param {any} key\r\n * @param {T} context\r\n * @returns {T}\r\n */\r\nexport function setContext(key, context) {\r\n\tconst context_map = get_or_init_context_map('setContext');\r\n\r\n\tif (DEV) {\r\n\t\t// When state is put into context, we treat as if it's global from now on.\r\n\t\t// We do for performance reasons (it's for example very expensive to call\r\n\t\t// getContext on a big object many times when part of a list component)\r\n\t\t// and danger of false positives.\r\n\t\tuntrack(() => add_owner(context, null, true));\r\n\t}\r\n\r\n\tcontext_map.set(key, context);\r\n\treturn context;\r\n}\r\n\r\n/**\r\n * Checks whether a given `key` has been set in the context of a parent component.\r\n * Must be called during component initialisation.\r\n *\r\n * @param {any} key\r\n * @returns {boolean}\r\n */\r\nexport function hasContext(key) {\r\n\tconst context_map = get_or_init_context_map('hasContext');\r\n\treturn context_map.has(key);\r\n}\r\n\r\n/**\r\n * Retrieves the whole context map that belongs to the closest parent component.\r\n * Must be called during component initialisation. Useful, for example, if you\r\n * programmatically create a component and want to pass the existing context to it.\r\n *\r\n * @template {Map<any, any>} [T=Map<any, any>]\r\n * @returns {T}\r\n */\r\nexport function getAllContexts() {\r\n\tconst context_map = get_or_init_context_map('getAllContexts');\r\n\treturn /** @type {T} */ (context_map);\r\n}\r\n\r\n/**\r\n * @param {Record<string, unknown>} props\r\n * @param {any} runes\r\n * @param {Function} [fn]\r\n * @returns {void}\r\n */\r\nexport function push(props, runes = false, fn) {\r\n\tvar ctx = (component_context = {\r\n\t\tp: component_context,\r\n\t\tc: null,\r\n\t\td: false,\r\n\t\te: null,\r\n\t\tm: false,\r\n\t\ts: props,\r\n\t\tx: null,\r\n\t\tl: null\r\n\t});\r\n\r\n\tif (legacy_mode_flag && !runes) {\r\n\t\tcomponent_context.l = {\r\n\t\t\ts: null,\r\n\t\t\tu: null,\r\n\t\t\tr1: [],\r\n\t\t\tr2: source(false)\r\n\t\t};\r\n\t}\r\n\r\n\tteardown(() => {\r\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\r\n\t});\r\n\r\n\tif (DEV) {\r\n\t\t// component function\r\n\t\tcomponent_context.function = fn;\r\n\t\tdev_current_component_function = fn;\r\n\t}\r\n}\r\n\r\n/**\r\n * @template {Record<string, any>} T\r\n * @param {T} [component]\r\n * @returns {T}\r\n */\r\nexport function pop(component) {\r\n\tconst context_stack_item = component_context;\r\n\tif (context_stack_item !== null) {\r\n\t\tif (component !== undefined) {\r\n\t\t\tcontext_stack_item.x = component;\r\n\t\t}\r\n\t\tconst component_effects = context_stack_item.e;\r\n\t\tif (component_effects !== null) {\r\n\t\t\tvar previous_effect = active_effect;\r\n\t\t\tvar previous_reaction = active_reaction;\r\n\t\t\tcontext_stack_item.e = null;\r\n\t\t\ttry {\r\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\r\n\t\t\t\t\tvar component_effect = component_effects[i];\r\n\t\t\t\t\tset_active_effect(component_effect.effect);\r\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\r\n\t\t\t\t\teffect(component_effect.fn);\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tset_active_effect(previous_effect);\r\n\t\t\t\tset_active_reaction(previous_reaction);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcomponent_context = context_stack_item.p;\r\n\t\tif (DEV) {\r\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\r\n\t\t}\r\n\t\tcontext_stack_item.m = true;\r\n\t}\r\n\t// Micro-optimization: Don't set .a above to the empty object\r\n\t// so it can be garbage-collected when the return here is unused\r\n\treturn component || /** @type {T} */ ({});\r\n}\r\n\r\n/** @returns {boolean} */\r\nexport function is_runes() {\r\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\r\n}\r\n\r\n/**\r\n * @param {string} name\r\n * @returns {Map<unknown, unknown>}\r\n */\r\nfunction get_or_init_context_map(name) {\r\n\tif (component_context === null) {\r\n\t\tlifecycle_outside_component(name);\r\n\t}\r\n\r\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\r\n}\r\n\r\n/**\r\n * @param {ComponentContext} component_context\r\n * @returns {Map<unknown, unknown> | null}\r\n */\r\nfunction get_parent_context(component_context) {\r\n\tlet parent = component_context.p;\r\n\twhile (parent !== null) {\r\n\t\tconst context_map = parent.c;\r\n\t\tif (context_map !== null) {\r\n\t\t\treturn context_map;\r\n\t\t}\r\n\t\tparent = parent.p;\r\n\t}\r\n\treturn null;\r\n}\r\n", "/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\r\nimport { DEV } from 'esm-env';\r\nimport {\r\n\tactive_reaction,\r\n\tactive_effect,\r\n\tuntracked_writes,\r\n\tget,\r\n\tschedule_effect,\r\n\tset_untracked_writes,\r\n\tset_signal_status,\r\n\tuntrack,\r\n\tincrement_write_version,\r\n\tupdate_effect,\r\n\tderived_sources,\r\n\tset_derived_sources,\r\n\tcheck_dirtiness,\r\n\tuntracking,\r\n\tis_destroying_effect\r\n} from '../runtime.js';\r\nimport { equals, safe_equals } from './equality.js';\r\nimport {\r\n\tCLEAN,\r\n\tDERIVED,\r\n\tDIRTY,\r\n\tBRANCH_EFFECT,\r\n\tINSPECT_EFFECT,\r\n\tUNOWNED,\r\n\tMAYBE_DIRTY,\r\n\tBLOCK_EFFECT,\r\n\tROOT_EFFECT\r\n} from '../constants.js';\r\nimport * as e from '../errors.js';\r\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\r\nimport { get_stack } from '../dev/tracing.js';\r\nimport { component_context, is_runes } from '../context.js';\r\n\r\nexport let inspect_effects = new Set();\r\nexport const old_values = new Map();\r\n\r\n/**\r\n * @param {Set<any>} v\r\n */\r\nexport function set_inspect_effects(v) {\r\n\tinspect_effects = v;\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {V} v\r\n * @param {Error | null} [stack]\r\n * @returns {Source<V>}\r\n */\r\nexport function source(v, stack) {\r\n\t/** @type {Value} */\r\n\tvar signal = {\r\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\r\n\t\tv,\r\n\t\treactions: null,\r\n\t\tequals,\r\n\t\trv: 0,\r\n\t\twv: 0\r\n\t};\r\n\r\n\tif (DEV && tracing_mode_flag) {\r\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\r\n\t\tsignal.debug = null;\r\n\t}\r\n\r\n\treturn signal;\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {V} v\r\n */\r\nexport function state(v) {\r\n\treturn push_derived_source(source(v));\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {V} initial_value\r\n * @param {boolean} [immutable]\r\n * @returns {Source<V>}\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function mutable_source(initial_value, immutable = false) {\r\n\tconst s = source(initial_value);\r\n\tif (!immutable) {\r\n\t\ts.equals = safe_equals;\r\n\t}\r\n\r\n\t// bind the signal to the component context, in case we need to\r\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\r\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\r\n\t\t(component_context.l.s ??= []).push(s);\r\n\t}\r\n\r\n\treturn s;\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {V} v\r\n * @param {boolean} [immutable]\r\n * @returns {Source<V>}\r\n */\r\nexport function mutable_state(v, immutable = false) {\r\n\treturn push_derived_source(mutable_source(v, immutable));\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Source<V>} source\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nfunction push_derived_source(source) {\r\n\tif (active_reaction !== null && !untracking && (active_reaction.f & DERIVED) !== 0) {\r\n\t\tif (derived_sources === null) {\r\n\t\t\tset_derived_sources([source]);\r\n\t\t} else {\r\n\t\t\tderived_sources.push(source);\r\n\t\t}\r\n\t}\r\n\r\n\treturn source;\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Value<V>} source\r\n * @param {V} value\r\n */\r\nexport function mutate(source, value) {\r\n\tset(\r\n\t\tsource,\r\n\t\tuntrack(() => get(source))\r\n\t);\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Source<V>} source\r\n * @param {V} value\r\n * @returns {V}\r\n */\r\nexport function set(source, value) {\r\n\tif (\r\n\t\tactive_reaction !== null &&\r\n\t\t!untracking &&\r\n\t\tis_runes() &&\r\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\r\n\t\t// If the source was created locally within the current derived, then\r\n\t\t// we allow the mutation.\r\n\t\t(derived_sources === null || !derived_sources.includes(source))\r\n\t) {\r\n\t\te.state_unsafe_mutation();\r\n\t}\r\n\r\n\treturn internal_set(source, value);\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Source<V>} source\r\n * @param {V} value\r\n * @returns {V}\r\n */\r\nexport function internal_set(source, value) {\r\n\tif (!source.equals(value)) {\r\n\t\tvar old_value = source.v;\r\n\r\n\t\tif (is_destroying_effect) {\r\n\t\t\told_values.set(source, value);\r\n\t\t} else {\r\n\t\t\told_values.set(source, old_value);\r\n\t\t}\r\n\r\n\t\tsource.v = value;\r\n\t\tsource.wv = increment_write_version();\r\n\r\n\t\tif (DEV && tracing_mode_flag) {\r\n\t\t\tsource.updated = get_stack('UpdatedAt');\r\n\t\t\tif (active_effect != null) {\r\n\t\t\t\tsource.trace_need_increase = true;\r\n\t\t\t\tsource.trace_v ??= old_value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmark_reactions(source, DIRTY);\r\n\r\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\r\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\r\n\t\t// properly for itself, we need to ensure the current effect actually gets\r\n\t\t// scheduled. i.e: `$effect(() => x++)`\r\n\t\tif (\r\n\t\t\tis_runes() &&\r\n\t\t\tactive_effect !== null &&\r\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\r\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\r\n\t\t) {\r\n\t\t\tif (untracked_writes === null) {\r\n\t\t\t\tset_untracked_writes([source]);\r\n\t\t\t} else {\r\n\t\t\t\tuntracked_writes.push(source);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (DEV && inspect_effects.size > 0) {\r\n\t\t\tconst inspects = Array.from(inspect_effects);\r\n\r\n\t\t\tfor (const effect of inspects) {\r\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\r\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\r\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\r\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\r\n\t\t\t\t}\r\n\t\t\t\tif (check_dirtiness(effect)) {\r\n\t\t\t\t\tupdate_effect(effect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinspect_effects.clear();\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @template {number | bigint} T\r\n * @param {Source<T>} source\r\n * @param {1 | -1} [d]\r\n * @returns {T}\r\n */\r\nexport function update(source, d = 1) {\r\n\tvar value = get(source);\r\n\tvar result = d === 1 ? value++ : value--;\r\n\r\n\tset(source, value);\r\n\r\n\t// @ts-expect-error\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * @template {number | bigint} T\r\n * @param {Source<T>} source\r\n * @param {1 | -1} [d]\r\n * @returns {T}\r\n */\r\nexport function update_pre(source, d = 1) {\r\n\tvar value = get(source);\r\n\r\n\t// @ts-expect-error\r\n\treturn set(source, d === 1 ? ++value : --value);\r\n}\r\n\r\n/**\r\n * @param {Value} signal\r\n * @param {number} status should be DIRTY or MAYBE_DIRTY\r\n * @returns {void}\r\n */\r\nfunction mark_reactions(signal, status) {\r\n\tvar reactions = signal.reactions;\r\n\tif (reactions === null) return;\r\n\r\n\tvar runes = is_runes();\r\n\tvar length = reactions.length;\r\n\r\n\tfor (var i = 0; i < length; i++) {\r\n\t\tvar reaction = reactions[i];\r\n\t\tvar flags = reaction.f;\r\n\r\n\t\t// Skip any effects that are already dirty\r\n\t\tif ((flags & DIRTY) !== 0) continue;\r\n\r\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\r\n\t\tif (!runes && reaction === active_effect) continue;\r\n\r\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\r\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\r\n\t\t\tinspect_effects.add(reaction);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tset_signal_status(reaction, status);\r\n\r\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\r\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\r\n\t\t\tif ((flags & DERIVED) !== 0) {\r\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\r\n\t\t\t} else {\r\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "/** @import { Derived, Effect } from '#client' */\r\nimport { DEV } from 'esm-env';\r\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\r\nimport {\r\n\tactive_reaction,\r\n\tactive_effect,\r\n\tset_signal_status,\r\n\tskip_reaction,\r\n\tupdate_reaction,\r\n\tincrement_write_version,\r\n\tset_active_effect\r\n} from '../runtime.js';\r\nimport { equals, safe_equals } from './equality.js';\r\nimport * as e from '../errors.js';\r\nimport { destroy_effect } from './effects.js';\r\nimport { inspect_effects, set_inspect_effects } from './sources.js';\r\nimport { get_stack } from '../dev/tracing.js';\r\nimport { tracing_mode_flag } from '../../flags/index.js';\r\nimport { component_context } from '../context.js';\r\n\r\n/**\r\n * @template V\r\n * @param {() => V} fn\r\n * @returns {Derived<V>}\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function derived(fn) {\r\n\tvar flags = DERIVED | DIRTY;\r\n\tvar parent_derived =\r\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\r\n\t\t\t? /** @type {Derived} */ (active_reaction)\r\n\t\t\t: null;\r\n\r\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\r\n\t\tflags |= UNOWNED;\r\n\t} else {\r\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\r\n\t\t// created too late to ensure that the parent effect is added to the tree\r\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\r\n\t}\r\n\r\n\t/** @type {Derived<V>} */\r\n\tconst signal = {\r\n\t\tctx: component_context,\r\n\t\tdeps: null,\r\n\t\teffects: null,\r\n\t\tequals,\r\n\t\tf: flags,\r\n\t\tfn,\r\n\t\treactions: null,\r\n\t\trv: 0,\r\n\t\tv: /** @type {V} */ (null),\r\n\t\twv: 0,\r\n\t\tparent: parent_derived ?? active_effect\r\n\t};\r\n\r\n\tif (DEV && tracing_mode_flag) {\r\n\t\tsignal.created = get_stack('CreatedAt');\r\n\t}\r\n\r\n\treturn signal;\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {() => V} fn\r\n * @returns {Derived<V>}\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function derived_safe_equal(fn) {\r\n\tconst signal = derived(fn);\r\n\tsignal.equals = safe_equals;\r\n\treturn signal;\r\n}\r\n\r\n/**\r\n * @param {Derived} derived\r\n * @returns {void}\r\n */\r\nexport function destroy_derived_effects(derived) {\r\n\tvar effects = derived.effects;\r\n\r\n\tif (effects !== null) {\r\n\t\tderived.effects = null;\r\n\r\n\t\tfor (var i = 0; i < effects.length; i += 1) {\r\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * The currently updating deriveds, used to detect infinite recursion\r\n * in dev mode and provide a nicer error than 'too much recursion'\r\n * @type {Derived[]}\r\n */\r\nlet stack = [];\r\n\r\n/**\r\n * @param {Derived} derived\r\n * @returns {Effect | null}\r\n */\r\nfunction get_derived_parent_effect(derived) {\r\n\tvar parent = derived.parent;\r\n\twhile (parent !== null) {\r\n\t\tif ((parent.f & DERIVED) === 0) {\r\n\t\t\treturn /** @type {Effect} */ (parent);\r\n\t\t}\r\n\t\tparent = parent.parent;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {Derived} derived\r\n * @returns {T}\r\n */\r\nfunction execute_derived(derived) {\r\n\tvar value;\r\n\tvar prev_active_effect = active_effect;\r\n\r\n\tset_active_effect(get_derived_parent_effect(derived));\r\n\r\n\tif (DEV) {\r\n\t\tlet prev_inspect_effects = inspect_effects;\r\n\t\tset_inspect_effects(new Set());\r\n\t\ttry {\r\n\t\t\tif (stack.includes(derived)) {\r\n\t\t\t\te.derived_references_self();\r\n\t\t\t}\r\n\r\n\t\t\tstack.push(derived);\r\n\r\n\t\t\tdestroy_derived_effects(derived);\r\n\t\t\tvalue = update_reaction(derived);\r\n\t\t} finally {\r\n\t\t\tset_active_effect(prev_active_effect);\r\n\t\t\tset_inspect_effects(prev_inspect_effects);\r\n\t\t\tstack.pop();\r\n\t\t}\r\n\t} else {\r\n\t\ttry {\r\n\t\t\tdestroy_derived_effects(derived);\r\n\t\t\tvalue = update_reaction(derived);\r\n\t\t} finally {\r\n\t\t\tset_active_effect(prev_active_effect);\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @param {Derived} derived\r\n * @returns {void}\r\n */\r\nexport function update_derived(derived) {\r\n\tvar value = execute_derived(derived);\r\n\tvar status =\r\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\r\n\r\n\tset_signal_status(derived, status);\r\n\r\n\tif (!derived.equals(value)) {\r\n\t\tderived.v = value;\r\n\t\tderived.wv = increment_write_version();\r\n\t}\r\n}\r\n", "/** @import { TemplateNode } from '#client' */\r\n\r\nimport {\r\n\tHYDRATION_END,\r\n\tHYDRATION_ERROR,\r\n\tHYDRATION_START,\r\n\tHYDRATION_START_ELSE\r\n} from '../../../constants.js';\r\nimport * as w from '../warnings.js';\r\nimport { get_next_sibling } from './operations.js';\r\n\r\n/**\r\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\r\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\r\n */\r\nexport let hydrating = false;\r\n\r\n/** @param {boolean} value */\r\nexport function set_hydrating(value) {\r\n\thydrating = value;\r\n}\r\n\r\n/**\r\n * The node that is currently being hydrated. This starts out as the first node inside the opening\r\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\r\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\r\n * time we leave the block it is the closing comment, which serves as the block's anchor.\r\n * @type {TemplateNode}\r\n */\r\nexport let hydrate_node;\r\n\r\n/** @param {TemplateNode} node */\r\nexport function set_hydrate_node(node) {\r\n\tif (node === null) {\r\n\t\tw.hydration_mismatch();\r\n\t\tthrow HYDRATION_ERROR;\r\n\t}\r\n\r\n\treturn (hydrate_node = node);\r\n}\r\n\r\nexport function hydrate_next() {\r\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\r\n}\r\n\r\n/** @param {TemplateNode} node */\r\nexport function reset(node) {\r\n\tif (!hydrating) return;\r\n\r\n\t// If the node has remaining siblings, something has gone wrong\r\n\tif (get_next_sibling(hydrate_node) !== null) {\r\n\t\tw.hydration_mismatch();\r\n\t\tthrow HYDRATION_ERROR;\r\n\t}\r\n\r\n\thydrate_node = node;\r\n}\r\n\r\n/**\r\n * @param {HTMLTemplateElement} template\r\n */\r\nexport function hydrate_template(template) {\r\n\tif (hydrating) {\r\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\r\n\t\thydrate_node = template.content;\r\n\t}\r\n}\r\n\r\nexport function next(count = 1) {\r\n\tif (hydrating) {\r\n\t\tvar i = count;\r\n\t\tvar node = hydrate_node;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\r\n\t\t}\r\n\r\n\t\thydrate_node = node;\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\r\n */\r\nexport function remove_nodes() {\r\n\tvar depth = 0;\r\n\tvar node = hydrate_node;\r\n\r\n\twhile (true) {\r\n\t\tif (node.nodeType === 8) {\r\n\t\t\tvar data = /** @type {Comment} */ (node).data;\r\n\r\n\t\t\tif (data === HYDRATION_END) {\r\n\t\t\t\tif (depth === 0) return node;\r\n\t\t\t\tdepth -= 1;\r\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\r\n\t\t\t\tdepth += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\r\n\t\tnode.remove();\r\n\t\tnode = next;\r\n\t}\r\n}\r\n", "/** @import { ProxyMetadata, Source } from '#client' */\r\nimport { DEV } from 'esm-env';\r\nimport { get, active_effect } from './runtime.js';\r\nimport { component_context } from './context.js';\r\nimport {\r\n\tarray_prototype,\r\n\tget_descriptor,\r\n\tget_prototype_of,\r\n\tis_array,\r\n\tobject_prototype\r\n} from '../shared/utils.js';\r\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\r\nimport { source, set } from './reactivity/sources.js';\r\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\r\nimport { UNINITIALIZED } from '../../constants.js';\r\nimport * as e from './errors.js';\r\nimport { get_stack } from './dev/tracing.js';\r\nimport { tracing_mode_flag } from '../flags/index.js';\r\n\r\n/**\r\n * @template T\r\n * @param {T} value\r\n * @param {ProxyMetadata | null} [parent]\r\n * @param {Source<T>} [prev] dev mode only\r\n * @returns {T}\r\n */\r\nexport function proxy(value, parent = null, prev) {\r\n\t/** @type {Error | null} */\r\n\tvar stack = null;\r\n\tif (DEV && tracing_mode_flag) {\r\n\t\tstack = get_stack('CreatedAt');\r\n\t}\r\n\t// if non-proxyable, or is already a proxy, return `value`\r\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\r\n\t\treturn value;\r\n\t}\r\n\r\n\tconst prototype = get_prototype_of(value);\r\n\r\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/** @type {Map<any, Source<any>>} */\r\n\tvar sources = new Map();\r\n\tvar is_proxied_array = is_array(value);\r\n\tvar version = source(0);\r\n\r\n\tif (is_proxied_array) {\r\n\t\t// We need to create the length source eagerly to ensure that\r\n\t\t// mutations to the array are properly synced with our proxy\r\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\r\n\t}\r\n\r\n\t/** @type {ProxyMetadata} */\r\n\tvar metadata;\r\n\r\n\tif (DEV) {\r\n\t\tmetadata = {\r\n\t\t\tparent,\r\n\t\t\towners: null\r\n\t\t};\r\n\r\n\t\tif (prev) {\r\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\r\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\r\n\t\t\t// @ts-expect-error\r\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\r\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\r\n\t\t} else {\r\n\t\t\tmetadata.owners =\r\n\t\t\t\tparent === null\r\n\t\t\t\t\t? component_context !== null\r\n\t\t\t\t\t\t? new Set([component_context.function])\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t: new Set();\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Proxy(/** @type {any} */ (value), {\r\n\t\tdefineProperty(_, prop, descriptor) {\r\n\t\t\tif (\r\n\t\t\t\t!('value' in descriptor) ||\r\n\t\t\t\tdescriptor.configurable === false ||\r\n\t\t\t\tdescriptor.enumerable === false ||\r\n\t\t\t\tdescriptor.writable === false\r\n\t\t\t) {\r\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\r\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\r\n\t\t\t\t// afoul of the various invariants\r\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\r\n\t\t\t\te.state_descriptors_fixed();\r\n\t\t\t}\r\n\r\n\t\t\tvar s = sources.get(prop);\r\n\r\n\t\t\tif (s === undefined) {\r\n\t\t\t\ts = source(descriptor.value, stack);\r\n\t\t\t\tsources.set(prop, s);\r\n\t\t\t} else {\r\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tdeleteProperty(target, prop) {\r\n\t\t\tvar s = sources.get(prop);\r\n\r\n\t\t\tif (s === undefined) {\r\n\t\t\t\tif (prop in target) {\r\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\r\n\t\t\t\t// an indexed property\r\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\r\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\r\n\t\t\t\t\tvar n = Number(prop);\r\n\r\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\r\n\t\t\t\t\t\tset(ls, n);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tset(s, UNINITIALIZED);\r\n\t\t\t\tupdate_version(version);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tget(target, prop, receiver) {\r\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\r\n\t\t\t\treturn metadata;\r\n\t\t\t}\r\n\r\n\t\t\tif (prop === STATE_SYMBOL) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\r\n\t\t\tvar s = sources.get(prop);\r\n\t\t\tvar exists = prop in target;\r\n\r\n\t\t\t// create a source, but only if it's an own property and not a prototype property\r\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\r\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\r\n\t\t\t\tsources.set(prop, s);\r\n\t\t\t}\r\n\r\n\t\t\tif (s !== undefined) {\r\n\t\t\t\tvar v = get(s);\r\n\r\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\r\n\t\t\t\t// of the array itself, while the individual items would have ownership\r\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\r\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\r\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\r\n\t\t\t\t// For this reason, we need to widen the ownership of the children\r\n\t\t\t\t// upon access when we detect they are not connected.\r\n\t\t\t\tif (DEV) {\r\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\r\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\r\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\r\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\r\n\t\t\t}\r\n\r\n\t\t\treturn Reflect.get(target, prop, receiver);\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(target, prop) {\r\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\r\n\r\n\t\t\tif (descriptor && 'value' in descriptor) {\r\n\t\t\t\tvar s = sources.get(prop);\r\n\t\t\t\tif (s) descriptor.value = get(s);\r\n\t\t\t} else if (descriptor === undefined) {\r\n\t\t\t\tvar source = sources.get(prop);\r\n\t\t\t\tvar value = source?.v;\r\n\r\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\twritable: true\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor;\r\n\t\t},\r\n\r\n\t\thas(target, prop) {\r\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (prop === STATE_SYMBOL) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar s = sources.get(prop);\r\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\r\n\r\n\t\t\tif (\r\n\t\t\t\ts !== undefined ||\r\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\r\n\t\t\t) {\r\n\t\t\t\tif (s === undefined) {\r\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\r\n\t\t\t\t\tsources.set(prop, s);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar value = get(s);\r\n\t\t\t\tif (value === UNINITIALIZED) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn has;\r\n\t\t},\r\n\r\n\t\tset(target, prop, value, receiver) {\r\n\t\t\tvar s = sources.get(prop);\r\n\t\t\tvar has = prop in target;\r\n\r\n\t\t\t// variable.length = value -> clear all signals with index >= value\r\n\t\t\tif (is_proxied_array && prop === 'length') {\r\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\r\n\t\t\t\t\tvar other_s = sources.get(i + '');\r\n\t\t\t\t\tif (other_s !== undefined) {\r\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\r\n\t\t\t\t\t} else if (i in target) {\r\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\r\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\r\n\t\t\t\t\t\t// the value of the original item at that index.\r\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\r\n\t\t\t\t\t\tsources.set(i + '', other_s);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\r\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\r\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\r\n\t\t\t// object property before writing to that property.\r\n\t\t\tif (s === undefined) {\r\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\r\n\t\t\t\t\ts = source(undefined, stack);\r\n\t\t\t\t\tset(s, proxy(value, metadata));\r\n\t\t\t\t\tsources.set(prop, s);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thas = s.v !== UNINITIALIZED;\r\n\t\t\t\tset(s, proxy(value, metadata));\r\n\t\t\t}\r\n\r\n\t\t\tif (DEV) {\r\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\r\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\r\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\r\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\r\n\t\t\t\t}\r\n\t\t\t\tcheck_ownership(metadata);\r\n\t\t\t}\r\n\r\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\r\n\r\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\r\n\t\t\tif (descriptor?.set) {\r\n\t\t\t\tdescriptor.set.call(receiver, value);\r\n\t\t\t}\r\n\r\n\t\t\tif (!has) {\r\n\t\t\t\t// If we have mutated an array directly, we might need to\r\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\r\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\r\n\t\t\t\t// will not cause the length to be out of sync.\r\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\r\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\r\n\t\t\t\t\tvar n = Number(prop);\r\n\r\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\r\n\t\t\t\t\t\tset(ls, n + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdate_version(version);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\townKeys(target) {\r\n\t\t\tget(version);\r\n\r\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\r\n\t\t\t\tvar source = sources.get(key);\r\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\r\n\t\t\t});\r\n\r\n\t\t\tfor (var [key, source] of sources) {\r\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\r\n\t\t\t\t\town_keys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn own_keys;\r\n\t\t},\r\n\r\n\t\tsetPrototypeOf() {\r\n\t\t\te.state_prototype_fixed();\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {Source<number>} signal\r\n * @param {1 | -1} [d]\r\n */\r\nfunction update_version(signal, d = 1) {\r\n\tset(signal, signal.v + d);\r\n}\r\n\r\n/**\r\n * @param {any} value\r\n */\r\nexport function get_proxied_value(value) {\r\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\r\n\t\treturn value[STATE_SYMBOL];\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @param {any} a\r\n * @param {any} b\r\n */\r\nexport function is(a, b) {\r\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\r\n}\r\n", "import * as w from '../warnings.js';\r\nimport { get_proxied_value } from '../proxy.js';\r\n\r\nexport function init_array_prototype_warnings() {\r\n\tconst array_prototype = Array.prototype;\r\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\r\n\t// of the same kind to the prototype, which would slow down everything over time.\r\n\t// @ts-expect-error\r\n\tconst cleanup = Array.__svelte_cleanup;\r\n\tif (cleanup) {\r\n\t\tcleanup();\r\n\t}\r\n\r\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\r\n\r\n\tarray_prototype.indexOf = function (item, from_index) {\r\n\t\tconst index = indexOf.call(this, item, from_index);\r\n\r\n\t\tif (index === -1) {\r\n\t\t\tfor (let i = from_index ?? 0; i < this.length; i += 1) {\r\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\r\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t};\r\n\r\n\tarray_prototype.lastIndexOf = function (item, from_index) {\r\n\t\t// we need to specify this.length - 1 because it's probably using something like\r\n\t\t// `arguments` inside so passing undefined is different from not passing anything\r\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\r\n\r\n\t\tif (index === -1) {\r\n\t\t\tfor (let i = 0; i <= (from_index ?? this.length - 1); i += 1) {\r\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\r\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t};\r\n\r\n\tarray_prototype.includes = function (item, from_index) {\r\n\t\tconst has = includes.call(this, item, from_index);\r\n\r\n\t\tif (!has) {\r\n\t\t\tfor (let i = 0; i < this.length; i += 1) {\r\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\r\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn has;\r\n\t};\r\n\r\n\t// @ts-expect-error\r\n\tArray.__svelte_cleanup = () => {\r\n\t\tarray_prototype.indexOf = indexOf;\r\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\r\n\t\tarray_prototype.includes = includes;\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {any} a\r\n * @param {any} b\r\n * @param {boolean} equal\r\n * @returns {boolean}\r\n */\r\nexport function strict_equals(a, b, equal = true) {\r\n\t// try-catch needed because this tries to read properties of `a` and `b`,\r\n\t// which could be disallowed for example in a secure context\r\n\ttry {\r\n\t\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\r\n\t\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\r\n\t\t}\r\n\t} catch {}\r\n\r\n\treturn (a === b) === equal;\r\n}\r\n\r\n/**\r\n * @param {any} a\r\n * @param {any} b\r\n * @param {boolean} equal\r\n * @returns {boolean}\r\n */\r\nexport function equals(a, b, equal = true) {\r\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\r\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\r\n\t}\r\n\r\n\treturn (a == b) === equal;\r\n}\r\n", "/** @import { TemplateNode } from '#client' */\r\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\r\nimport { DEV } from 'esm-env';\r\nimport { init_array_prototype_warnings } from '../dev/equality.js';\r\nimport { get_descriptor } from '../../shared/utils.js';\r\n\r\n// export these for reference in the compiled code, making global name deduplication unnecessary\r\n/** @type {Window} */\r\nexport var $window;\r\n\r\n/** @type {Document} */\r\nexport var $document;\r\n\r\n/** @type {boolean} */\r\nexport var is_firefox;\r\n\r\n/** @type {() => Node | null} */\r\nvar first_child_getter;\r\n/** @type {() => Node | null} */\r\nvar next_sibling_getter;\r\n\r\n/**\r\n * Initialize these lazily to avoid issues when using the runtime in a server context\r\n * where these globals are not available while avoiding a separate server entry point\r\n */\r\nexport function init_operations() {\r\n\tif ($window !== undefined) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t$window = window;\r\n\t$document = document;\r\n\tis_firefox = /Firefox/.test(navigator.userAgent);\r\n\r\n\tvar element_prototype = Element.prototype;\r\n\tvar node_prototype = Node.prototype;\r\n\r\n\t// @ts-ignore\r\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\r\n\t// @ts-ignore\r\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\r\n\r\n\t// the following assignments improve perf of lookups on DOM nodes\r\n\t// @ts-expect-error\r\n\telement_prototype.__click = undefined;\r\n\t// @ts-expect-error\r\n\telement_prototype.__className = undefined;\r\n\t// @ts-expect-error\r\n\telement_prototype.__attributes = null;\r\n\t// @ts-expect-error\r\n\telement_prototype.__style = undefined;\r\n\t// @ts-expect-error\r\n\telement_prototype.__e = undefined;\r\n\r\n\t// @ts-expect-error\r\n\tText.prototype.__t = undefined;\r\n\r\n\tif (DEV) {\r\n\t\t// @ts-expect-error\r\n\t\telement_prototype.__svelte_meta = null;\r\n\r\n\t\tinit_array_prototype_warnings();\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @returns {Text}\r\n */\r\nexport function create_text(value = '') {\r\n\treturn document.createTextNode(value);\r\n}\r\n\r\n/**\r\n * @template {Node} N\r\n * @param {N} node\r\n * @returns {Node | null}\r\n */\r\n/*@__NO_SIDE_EFFECTS__*/\r\nexport function get_first_child(node) {\r\n\treturn first_child_getter.call(node);\r\n}\r\n\r\n/**\r\n * @template {Node} N\r\n * @param {N} node\r\n * @returns {Node | null}\r\n */\r\n/*@__NO_SIDE_EFFECTS__*/\r\nexport function get_next_sibling(node) {\r\n\treturn next_sibling_getter.call(node);\r\n}\r\n\r\n/**\r\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\r\n * @template {Node} N\r\n * @param {N} node\r\n * @param {boolean} is_text\r\n * @returns {Node | null}\r\n */\r\nexport function child(node, is_text) {\r\n\tif (!hydrating) {\r\n\t\treturn get_first_child(node);\r\n\t}\r\n\r\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\r\n\r\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\r\n\tif (child === null) {\r\n\t\tchild = hydrate_node.appendChild(create_text());\r\n\t} else if (is_text && child.nodeType !== 3) {\r\n\t\tvar text = create_text();\r\n\t\tchild?.before(text);\r\n\t\tset_hydrate_node(text);\r\n\t\treturn text;\r\n\t}\r\n\r\n\tset_hydrate_node(child);\r\n\treturn child;\r\n}\r\n\r\n/**\r\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\r\n * @param {DocumentFragment | TemplateNode[]} fragment\r\n * @param {boolean} is_text\r\n * @returns {Node | null}\r\n */\r\nexport function first_child(fragment, is_text) {\r\n\tif (!hydrating) {\r\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\r\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\r\n\r\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\r\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\r\n\r\n\t\treturn first;\r\n\t}\r\n\r\n\t// if an {expression} is empty during SSR, there might be no\r\n\t// text node to hydrate — we must therefore create one\r\n\tif (is_text && hydrate_node?.nodeType !== 3) {\r\n\t\tvar text = create_text();\r\n\r\n\t\thydrate_node?.before(text);\r\n\t\tset_hydrate_node(text);\r\n\t\treturn text;\r\n\t}\r\n\r\n\treturn hydrate_node;\r\n}\r\n\r\n/**\r\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\r\n * @param {TemplateNode} node\r\n * @param {number} count\r\n * @param {boolean} is_text\r\n * @returns {Node | null}\r\n */\r\nexport function sibling(node, count = 1, is_text = false) {\r\n\tlet next_sibling = hydrating ? hydrate_node : node;\r\n\tvar last_sibling;\r\n\r\n\twhile (count--) {\r\n\t\tlast_sibling = next_sibling;\r\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\r\n\t}\r\n\r\n\tif (!hydrating) {\r\n\t\treturn next_sibling;\r\n\t}\r\n\r\n\tvar type = next_sibling?.nodeType;\r\n\r\n\t// if a sibling {expression} is empty during SSR, there might be no\r\n\t// text node to hydrate — we must therefore create one\r\n\tif (is_text && type !== 3) {\r\n\t\tvar text = create_text();\r\n\t\t// If the next sibling is `null` and we're handling text then it's because\r\n\t\t// the SSR content was empty for the text, so we need to generate a new text\r\n\t\t// node and insert it after the last sibling\r\n\t\tif (next_sibling === null) {\r\n\t\t\tlast_sibling?.after(text);\r\n\t\t} else {\r\n\t\t\tnext_sibling.before(text);\r\n\t\t}\r\n\t\tset_hydrate_node(text);\r\n\t\treturn text;\r\n\t}\r\n\r\n\tset_hydrate_node(next_sibling);\r\n\treturn /** @type {TemplateNode} */ (next_sibling);\r\n}\r\n\r\n/**\r\n * @template {Node} N\r\n * @param {N} node\r\n * @returns {void}\r\n */\r\nexport function clear_text_content(node) {\r\n\tnode.textContent = '';\r\n}\r\n", "/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\r\nimport { DEV } from 'esm-env';\r\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\r\nimport {\r\n\tdestroy_block_effect_children,\r\n\tdestroy_effect_children,\r\n\texecute_effect_teardown,\r\n\tunlink_effect\r\n} from './reactivity/effects.js';\r\nimport {\r\n\tEFFECT,\r\n\tDIRTY,\r\n\tMAYBE_DIRTY,\r\n\tCLEAN,\r\n\tDERIVED,\r\n\tUNOWNED,\r\n\tDESTROYED,\r\n\tINERT,\r\n\tBRANCH_EFFECT,\r\n\tSTATE_SYMBOL,\r\n\tBLOCK_EFFECT,\r\n\tROOT_EFFECT,\r\n\tLEGACY_DERIVED_PROP,\r\n\tDISCONNECTED,\r\n\tBOUNDARY_EFFECT\r\n} from './constants.js';\r\nimport { flush_tasks } from './dom/task.js';\r\nimport { internal_set, old_values } from './reactivity/sources.js';\r\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\r\nimport * as e from './errors.js';\r\nimport { FILENAME } from '../../constants.js';\r\nimport { tracing_mode_flag } from '../flags/index.js';\r\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\r\nimport {\r\n\tcomponent_context,\r\n\tdev_current_component_function,\r\n\tis_runes,\r\n\tset_component_context,\r\n\tset_dev_current_component_function\r\n} from './context.js';\r\nimport { is_firefox } from './dom/operations.js';\r\n\r\n// Used for DEV time error handling\r\n/** @param {WeakSet<Error>} value */\r\nconst handled_errors = new WeakSet();\r\nlet is_throwing_error = false;\r\n\r\nlet is_flushing = false;\r\n\r\n/** @type {Effect | null} */\r\nlet last_scheduled_effect = null;\r\n\r\nlet is_updating_effect = false;\r\n\r\nexport let is_destroying_effect = false;\r\n\r\n/** @param {boolean} value */\r\nexport function set_is_destroying_effect(value) {\r\n\tis_destroying_effect = value;\r\n}\r\n\r\n// Handle effect queues\r\n\r\n/** @type {Effect[]} */\r\nlet queued_root_effects = [];\r\n\r\n/** @type {Effect[]} Stack of effects, dev only */\r\nlet dev_effect_stack = [];\r\n// Handle signal reactivity tree dependencies and reactions\r\n\r\n/** @type {null | Reaction} */\r\nexport let active_reaction = null;\r\n\r\nexport let untracking = false;\r\n\r\n/** @param {null | Reaction} reaction */\r\nexport function set_active_reaction(reaction) {\r\n\tactive_reaction = reaction;\r\n}\r\n\r\n/** @type {null | Effect} */\r\nexport let active_effect = null;\r\n\r\n/** @param {null | Effect} effect */\r\nexport function set_active_effect(effect) {\r\n\tactive_effect = effect;\r\n}\r\n\r\n/**\r\n * When sources are created within a derived, we record them so that we can safely allow\r\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\r\n * @type {null | Source[]}\r\n */\r\nexport let derived_sources = null;\r\n\r\n/**\r\n * @param {Source[] | null} sources\r\n */\r\nexport function set_derived_sources(sources) {\r\n\tderived_sources = sources;\r\n}\r\n\r\n/**\r\n * The dependencies of the reaction that is currently being executed. In many cases,\r\n * the dependencies are unchanged between runs, and so this will be `null` unless\r\n * and until a new dependency is accessed — we track this via `skipped_deps`\r\n * @type {null | Value[]}\r\n */\r\nlet new_deps = null;\r\n\r\nlet skipped_deps = 0;\r\n\r\n/**\r\n * Tracks writes that the effect it's executed in doesn't listen to yet,\r\n * so that the dependency can be added to the effect later on if it then reads it\r\n * @type {null | Source[]}\r\n */\r\nexport let untracked_writes = null;\r\n\r\n/** @param {null | Source[]} value */\r\nexport function set_untracked_writes(value) {\r\n\tuntracked_writes = value;\r\n}\r\n\r\n/**\r\n * @type {number} Used by sources and deriveds for handling updates.\r\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\r\n **/\r\nlet write_version = 1;\r\n\r\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\r\nlet read_version = 0;\r\n\r\n// If we are working with a get() chain that has no active container,\r\n// to prevent memory leaks, we skip adding the reaction.\r\nexport let skip_reaction = false;\r\n// Handle collecting all signals which are read during a specific time frame\r\n/** @type {Set<Value> | null} */\r\nexport let captured_signals = null;\r\n\r\n/** @param {Set<Value> | null} value */\r\nexport function set_captured_signals(value) {\r\n\tcaptured_signals = value;\r\n}\r\n\r\nexport function increment_write_version() {\r\n\treturn ++write_version;\r\n}\r\n\r\n/**\r\n * Determines whether a derived or effect is dirty.\r\n * If it is MAYBE_DIRTY, will set the status to CLEAN\r\n * @param {Reaction} reaction\r\n * @returns {boolean}\r\n */\r\nexport function check_dirtiness(reaction) {\r\n\tvar flags = reaction.f;\r\n\r\n\tif ((flags & DIRTY) !== 0) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ((flags & MAYBE_DIRTY) !== 0) {\r\n\t\tvar dependencies = reaction.deps;\r\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\r\n\r\n\t\tif (dependencies !== null) {\r\n\t\t\tvar i;\r\n\t\t\tvar dependency;\r\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\r\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\r\n\t\t\tvar length = dependencies.length;\r\n\r\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\r\n\t\t\t// then we need to re-connect the reaction to the dependency\r\n\t\t\tif (is_disconnected || is_unowned_connected) {\r\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\r\n\t\t\t\tvar parent = derived.parent;\r\n\r\n\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\tdependency = dependencies[i];\r\n\r\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\r\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\r\n\t\t\t\t\t// de-duplicate dependencies in that case\r\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\r\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (is_disconnected) {\r\n\t\t\t\t\tderived.f ^= DISCONNECTED;\r\n\t\t\t\t}\r\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\r\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\r\n\t\t\t\t// flag\r\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\r\n\t\t\t\t\tderived.f ^= UNOWNED;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\tdependency = dependencies[i];\r\n\r\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\r\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dependency.wv > reaction.wv) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Unowned signals should never be marked as clean unless they\r\n\t\t// are used within an active_effect without skip_reaction\r\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\r\n\t\t\tset_signal_status(reaction, CLEAN);\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * @param {unknown} error\r\n * @param {Effect} effect\r\n */\r\nfunction propagate_error(error, effect) {\r\n\t/** @type {Effect | null} */\r\n\tvar current = effect;\r\n\r\n\twhile (current !== null) {\r\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\r\n\t\t\ttry {\r\n\t\t\t\t// @ts-expect-error\r\n\t\t\t\tcurrent.fn(error);\r\n\t\t\t\treturn;\r\n\t\t\t} catch {\r\n\t\t\t\t// Remove boundary flag from effect\r\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcurrent = current.parent;\r\n\t}\r\n\r\n\tis_throwing_error = false;\r\n\tthrow error;\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n */\r\nfunction should_rethrow_error(effect) {\r\n\treturn (\r\n\t\t(effect.f & DESTROYED) === 0 &&\r\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\r\n\t);\r\n}\r\n\r\nexport function reset_is_throwing_error() {\r\n\tis_throwing_error = false;\r\n}\r\n\r\n/**\r\n * @param {unknown} error\r\n * @param {Effect} effect\r\n * @param {Effect | null} previous_effect\r\n * @param {ComponentContext | null} component_context\r\n */\r\nexport function handle_error(error, effect, previous_effect, component_context) {\r\n\tif (is_throwing_error) {\r\n\t\tif (previous_effect === null) {\r\n\t\t\tis_throwing_error = false;\r\n\t\t}\r\n\r\n\t\tif (should_rethrow_error(effect)) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (previous_effect !== null) {\r\n\t\tis_throwing_error = true;\r\n\t}\r\n\r\n\tif (\r\n\t\t!DEV ||\r\n\t\tcomponent_context === null ||\r\n\t\t!(error instanceof Error) ||\r\n\t\thandled_errors.has(error)\r\n\t) {\r\n\t\tpropagate_error(error, effect);\r\n\t\treturn;\r\n\t}\r\n\r\n\thandled_errors.add(error);\r\n\r\n\tconst component_stack = [];\r\n\r\n\tconst effect_name = effect.fn?.name;\r\n\r\n\tif (effect_name) {\r\n\t\tcomponent_stack.push(effect_name);\r\n\t}\r\n\r\n\t/** @type {ComponentContext | null} */\r\n\tlet current_context = component_context;\r\n\r\n\twhile (current_context !== null) {\r\n\t\tif (DEV) {\r\n\t\t\t/** @type {string} */\r\n\t\t\tvar filename = current_context.function?.[FILENAME];\r\n\r\n\t\t\tif (filename) {\r\n\t\t\t\tconst file = filename.split('/').pop();\r\n\t\t\t\tcomponent_stack.push(file);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcurrent_context = current_context.p;\r\n\t}\r\n\r\n\tconst indent = is_firefox ? '  ' : '\\t';\r\n\tdefine_property(error, 'message', {\r\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\r\n\t});\r\n\tdefine_property(error, 'component_stack', {\r\n\t\tvalue: component_stack\r\n\t});\r\n\r\n\tconst stack = error.stack;\r\n\r\n\t// Filter out internal files from callstack\r\n\tif (stack) {\r\n\t\tconst lines = stack.split('\\n');\r\n\t\tconst new_lines = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tconst line = lines[i];\r\n\t\t\tif (line.includes('svelte/src/internal')) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tnew_lines.push(line);\r\n\t\t}\r\n\t\tdefine_property(error, 'stack', {\r\n\t\t\tvalue: new_lines.join('\\n')\r\n\t\t});\r\n\t}\r\n\r\n\tpropagate_error(error, effect);\r\n\r\n\tif (should_rethrow_error(effect)) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Value} signal\r\n * @param {Effect} effect\r\n * @param {boolean} [root]\r\n */\r\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\r\n\tvar reactions = signal.reactions;\r\n\tif (reactions === null) return;\r\n\r\n\tfor (var i = 0; i < reactions.length; i++) {\r\n\t\tvar reaction = reactions[i];\r\n\t\tif ((reaction.f & DERIVED) !== 0) {\r\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\r\n\t\t} else if (effect === reaction) {\r\n\t\t\tif (root) {\r\n\t\t\t\tset_signal_status(reaction, DIRTY);\r\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\r\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\r\n\t\t\t}\r\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Reaction} reaction\r\n * @returns {V}\r\n */\r\nexport function update_reaction(reaction) {\r\n\tvar previous_deps = new_deps;\r\n\tvar previous_skipped_deps = skipped_deps;\r\n\tvar previous_untracked_writes = untracked_writes;\r\n\tvar previous_reaction = active_reaction;\r\n\tvar previous_skip_reaction = skip_reaction;\r\n\tvar prev_derived_sources = derived_sources;\r\n\tvar previous_component_context = component_context;\r\n\tvar previous_untracking = untracking;\r\n\tvar flags = reaction.f;\r\n\r\n\tnew_deps = /** @type {null | Value[]} */ (null);\r\n\tskipped_deps = 0;\r\n\tuntracked_writes = null;\r\n\tskip_reaction =\r\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\r\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\r\n\r\n\tderived_sources = null;\r\n\tset_component_context(reaction.ctx);\r\n\tuntracking = false;\r\n\tread_version++;\r\n\r\n\ttry {\r\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\r\n\t\tvar deps = reaction.deps;\r\n\r\n\t\tif (new_deps !== null) {\r\n\t\t\tvar i;\r\n\r\n\t\t\tremove_reactions(reaction, skipped_deps);\r\n\r\n\t\t\tif (deps !== null && skipped_deps > 0) {\r\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\r\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\r\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treaction.deps = deps = new_deps;\r\n\t\t\t}\r\n\r\n\t\t\tif (!skip_reaction) {\r\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\r\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\r\n\t\t\tremove_reactions(reaction, skipped_deps);\r\n\t\t\tdeps.length = skipped_deps;\r\n\t\t}\r\n\r\n\t\t// If we're inside an effect and we have untracked writes, then we need to\r\n\t\t// ensure that if any of those untracked writes result in re-invalidation\r\n\t\t// of the current effect, then that happens accordingly\r\n\t\tif (\r\n\t\t\tis_runes() &&\r\n\t\t\tuntracked_writes !== null &&\r\n\t\t\t!untracking &&\r\n\t\t\tdeps !== null &&\r\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\r\n\t\t) {\r\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\r\n\t\t\t\tschedule_possible_effect_self_invalidation(\r\n\t\t\t\t\tuntracked_writes[i],\r\n\t\t\t\t\t/** @type {Effect} */ (reaction)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If we are returning to an previous reaction then\r\n\t\t// we need to increment the read version to ensure that\r\n\t\t// any dependencies in this reaction aren't marked with\r\n\t\t// the same version\r\n\t\tif (previous_reaction !== null) {\r\n\t\t\tread_version++;\r\n\r\n\t\t\tif (untracked_writes !== null) {\r\n\t\t\t\tif (previous_untracked_writes === null) {\r\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t} finally {\r\n\t\tnew_deps = previous_deps;\r\n\t\tskipped_deps = previous_skipped_deps;\r\n\t\tuntracked_writes = previous_untracked_writes;\r\n\t\tactive_reaction = previous_reaction;\r\n\t\tskip_reaction = previous_skip_reaction;\r\n\t\tderived_sources = prev_derived_sources;\r\n\t\tset_component_context(previous_component_context);\r\n\t\tuntracking = previous_untracking;\r\n\t}\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Reaction} signal\r\n * @param {Value<V>} dependency\r\n * @returns {void}\r\n */\r\nfunction remove_reaction(signal, dependency) {\r\n\tlet reactions = dependency.reactions;\r\n\tif (reactions !== null) {\r\n\t\tvar index = index_of.call(reactions, signal);\r\n\t\tif (index !== -1) {\r\n\t\t\tvar new_length = reactions.length - 1;\r\n\t\t\tif (new_length === 0) {\r\n\t\t\t\treactions = dependency.reactions = null;\r\n\t\t\t} else {\r\n\t\t\t\t// Swap with last element and then remove.\r\n\t\t\t\treactions[index] = reactions[new_length];\r\n\t\t\t\treactions.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// If the derived has no reactions, then we can disconnect it from the graph,\r\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\r\n\tif (\r\n\t\treactions === null &&\r\n\t\t(dependency.f & DERIVED) !== 0 &&\r\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\r\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\r\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\r\n\t\t(new_deps === null || !new_deps.includes(dependency))\r\n\t) {\r\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\r\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\r\n\t\t// disconnected.\r\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\r\n\t\t\tdependency.f ^= DISCONNECTED;\r\n\t\t}\r\n\t\t// Disconnect any reactions owned by this reaction\r\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\r\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Reaction} signal\r\n * @param {number} start_index\r\n * @returns {void}\r\n */\r\nexport function remove_reactions(signal, start_index) {\r\n\tvar dependencies = signal.deps;\r\n\tif (dependencies === null) return;\r\n\r\n\tfor (var i = start_index; i < dependencies.length; i++) {\r\n\t\tremove_reaction(signal, dependencies[i]);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n * @returns {void}\r\n */\r\nexport function update_effect(effect) {\r\n\tvar flags = effect.f;\r\n\r\n\tif ((flags & DESTROYED) !== 0) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tset_signal_status(effect, CLEAN);\r\n\r\n\tvar previous_effect = active_effect;\r\n\tvar previous_component_context = component_context;\r\n\tvar was_updating_effect = is_updating_effect;\r\n\r\n\tactive_effect = effect;\r\n\tis_updating_effect = true;\r\n\r\n\tif (DEV) {\r\n\t\tvar previous_component_fn = dev_current_component_function;\r\n\t\tset_dev_current_component_function(effect.component_function);\r\n\t}\r\n\r\n\ttry {\r\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\r\n\t\t\tdestroy_block_effect_children(effect);\r\n\t\t} else {\r\n\t\t\tdestroy_effect_children(effect);\r\n\t\t}\r\n\r\n\t\texecute_effect_teardown(effect);\r\n\t\tvar teardown = update_reaction(effect);\r\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\r\n\t\teffect.wv = write_version;\r\n\r\n\t\tvar deps = effect.deps;\r\n\r\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\r\n\t\t// incorrectly state a source dependency has not changed when it has.\r\n\t\t// That's beacuse that source was changed by the same effect, causing\r\n\t\t// the versions to match. We can avoid this by incrementing the version\r\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\r\n\t\t\tfor (let i = 0; i < deps.length; i++) {\r\n\t\t\t\tvar dep = deps[i];\r\n\t\t\t\tif (dep.trace_need_increase) {\r\n\t\t\t\t\tdep.wv = increment_write_version();\r\n\t\t\t\t\tdep.trace_need_increase = undefined;\r\n\t\t\t\t\tdep.trace_v = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (DEV) {\r\n\t\t\tdev_effect_stack.push(effect);\r\n\t\t}\r\n\t} catch (error) {\r\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\r\n\t} finally {\r\n\t\tis_updating_effect = was_updating_effect;\r\n\t\tactive_effect = previous_effect;\r\n\r\n\t\tif (DEV) {\r\n\t\t\tset_dev_current_component_function(previous_component_fn);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction log_effect_stack() {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.error(\r\n\t\t'Last ten effects were: ',\r\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\r\n\t);\r\n\tdev_effect_stack = [];\r\n}\r\n\r\nfunction infinite_loop_guard() {\r\n\ttry {\r\n\t\te.effect_update_depth_exceeded();\r\n\t} catch (error) {\r\n\t\tif (DEV) {\r\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\r\n\t\t\tdefine_property(error, 'stack', {\r\n\t\t\t\tvalue: ''\r\n\t\t\t});\r\n\t\t}\r\n\t\t// Try and handle the error so it can be caught at a boundary, that's\r\n\t\t// if there's an effect available from when it was last scheduled\r\n\t\tif (last_scheduled_effect !== null) {\r\n\t\t\tif (DEV) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\r\n\t\t\t\t\tlog_effect_stack();\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (DEV) {\r\n\t\t\t\tlog_effect_stack();\r\n\t\t\t}\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction flush_queued_root_effects() {\r\n\tvar was_updating_effect = is_updating_effect;\r\n\r\n\ttry {\r\n\t\tvar flush_count = 0;\r\n\t\tis_updating_effect = true;\r\n\r\n\t\twhile (queued_root_effects.length > 0) {\r\n\t\t\tif (flush_count++ > 1000) {\r\n\t\t\t\tinfinite_loop_guard();\r\n\t\t\t}\r\n\r\n\t\t\tvar root_effects = queued_root_effects;\r\n\t\t\tvar length = root_effects.length;\r\n\r\n\t\t\tqueued_root_effects = [];\r\n\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\r\n\t\t\t\tflush_queued_effects(collected_effects);\r\n\t\t\t}\r\n\t\t}\r\n\t} finally {\r\n\t\tis_flushing = false;\r\n\t\tis_updating_effect = was_updating_effect;\r\n\r\n\t\tlast_scheduled_effect = null;\r\n\t\tif (DEV) {\r\n\t\t\tdev_effect_stack = [];\r\n\t\t}\r\n\t\told_values.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Array<Effect>} effects\r\n * @returns {void}\r\n */\r\nfunction flush_queued_effects(effects) {\r\n\tvar length = effects.length;\r\n\tif (length === 0) return;\r\n\r\n\tfor (var i = 0; i < length; i++) {\r\n\t\tvar effect = effects[i];\r\n\r\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\r\n\t\t\ttry {\r\n\t\t\t\tif (check_dirtiness(effect)) {\r\n\t\t\t\t\tupdate_effect(effect);\r\n\r\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\r\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\r\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\r\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\r\n\t\t\t\t\t// immediate effects.\r\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\r\n\t\t\t\t\t\tif (effect.teardown === null) {\r\n\t\t\t\t\t\t\t// remove this effect from the graph\r\n\t\t\t\t\t\t\tunlink_effect(effect);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\r\n\t\t\t\t\t\t\teffect.fn = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} signal\r\n * @returns {void}\r\n */\r\nexport function schedule_effect(signal) {\r\n\tif (!is_flushing) {\r\n\t\tis_flushing = true;\r\n\t\tqueueMicrotask(flush_queued_root_effects);\r\n\t}\r\n\r\n\tvar effect = (last_scheduled_effect = signal);\r\n\r\n\twhile (effect.parent !== null) {\r\n\t\teffect = effect.parent;\r\n\t\tvar flags = effect.f;\r\n\r\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\r\n\t\t\tif ((flags & CLEAN) === 0) return;\r\n\t\t\teffect.f ^= CLEAN;\r\n\t\t}\r\n\t}\r\n\r\n\tqueued_root_effects.push(effect);\r\n}\r\n\r\n/**\r\n *\r\n * This function both runs render effects and collects user effects in topological order\r\n * from the starting effect passed in. Effects will be collected when they match the filtered\r\n * bitwise flag passed in only. The collected effects array will be populated with all the user\r\n * effects to be flushed.\r\n *\r\n * @param {Effect} root\r\n * @returns {Effect[]}\r\n */\r\nfunction process_effects(root) {\r\n\t/** @type {Effect[]} */\r\n\tvar effects = [];\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar effect = root;\r\n\r\n\twhile (effect !== null) {\r\n\t\tvar flags = effect.f;\r\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\r\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\r\n\r\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\r\n\t\t\tif ((flags & EFFECT) !== 0) {\r\n\t\t\t\teffects.push(effect);\r\n\t\t\t} else if (is_branch) {\r\n\t\t\t\teffect.f ^= CLEAN;\r\n\t\t\t} else {\r\n\t\t\t\t// Ensure we set the effect to be the active reaction\r\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\r\n\t\t\t\t// because we're flushing the current effect\r\n\t\t\t\tvar previous_active_reaction = active_reaction;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tactive_reaction = effect;\r\n\t\t\t\t\tif (check_dirtiness(effect)) {\r\n\t\t\t\t\t\tupdate_effect(effect);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tactive_reaction = previous_active_reaction;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/** @type {Effect | null} */\r\n\t\t\tvar child = effect.first;\r\n\r\n\t\t\tif (child !== null) {\r\n\t\t\t\teffect = child;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar parent = effect.parent;\r\n\t\teffect = effect.next;\r\n\r\n\t\twhile (effect === null && parent !== null) {\r\n\t\t\teffect = parent.next;\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\t}\r\n\r\n\treturn effects;\r\n}\r\n\r\n/**\r\n * Synchronously flush any pending updates.\r\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\r\n * @template [T=void]\r\n * @param {(() => T) | undefined} [fn]\r\n * @returns {T}\r\n */\r\nexport function flushSync(fn) {\r\n\tvar result;\r\n\r\n\tif (fn) {\r\n\t\tis_flushing = true;\r\n\t\tflush_queued_root_effects();\r\n\t\tresult = fn();\r\n\t}\r\n\r\n\tflush_tasks();\r\n\r\n\twhile (queued_root_effects.length > 0) {\r\n\t\tis_flushing = true;\r\n\t\tflush_queued_root_effects();\r\n\t\tflush_tasks();\r\n\t}\r\n\r\n\treturn /** @type {T} */ (result);\r\n}\r\n\r\n/**\r\n * Returns a promise that resolves once any pending state changes have been applied.\r\n * @returns {Promise<void>}\r\n */\r\nexport async function tick() {\r\n\tawait Promise.resolve();\r\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\r\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\r\n\tflushSync();\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Value<V>} signal\r\n * @returns {V}\r\n */\r\nexport function get(signal) {\r\n\tvar flags = signal.f;\r\n\tvar is_derived = (flags & DERIVED) !== 0;\r\n\r\n\tif (captured_signals !== null) {\r\n\t\tcaptured_signals.add(signal);\r\n\t}\r\n\r\n\t// Register the dependency on the current reaction signal.\r\n\tif (active_reaction !== null && !untracking) {\r\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\r\n\t\t\te.state_unsafe_local_read();\r\n\t\t}\r\n\t\tvar deps = active_reaction.deps;\r\n\t\tif (signal.rv < read_version) {\r\n\t\t\tsignal.rv = read_version;\r\n\t\t\t// If the signal is accessing the same dependencies in the same\r\n\t\t\t// order as it did last time, increment `skipped_deps`\r\n\t\t\t// rather than updating `new_deps`, which creates GC cost\r\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\r\n\t\t\t\tskipped_deps++;\r\n\t\t\t} else if (new_deps === null) {\r\n\t\t\t\tnew_deps = [signal];\r\n\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\r\n\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\r\n\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\r\n\t\t\t\t// we don't have duplicates\r\n\t\t\t\tnew_deps.push(signal);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (\r\n\t\tis_derived &&\r\n\t\t/** @type {Derived} */ (signal).deps === null &&\r\n\t\t/** @type {Derived} */ (signal).effects === null\r\n\t) {\r\n\t\tvar derived = /** @type {Derived} */ (signal);\r\n\t\tvar parent = derived.parent;\r\n\r\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\r\n\t\t\t// If the derived is owned by another derived then mark it as unowned\r\n\t\t\t// as the derived value might have been referenced in a different context\r\n\t\t\t// since and thus its parent might not be its true owner anymore\r\n\t\t\tderived.f ^= UNOWNED;\r\n\t\t}\r\n\t}\r\n\r\n\tif (is_derived) {\r\n\t\tderived = /** @type {Derived} */ (signal);\r\n\r\n\t\tif (check_dirtiness(derived)) {\r\n\t\t\tupdate_derived(derived);\r\n\t\t}\r\n\t}\r\n\r\n\tif (\r\n\t\tDEV &&\r\n\t\ttracing_mode_flag &&\r\n\t\ttracing_expressions !== null &&\r\n\t\tactive_reaction !== null &&\r\n\t\ttracing_expressions.reaction === active_reaction\r\n\t) {\r\n\t\t// Used when mapping state between special blocks like `each`\r\n\t\tif (signal.debug) {\r\n\t\t\tsignal.debug();\r\n\t\t} else if (signal.created) {\r\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\r\n\r\n\t\t\tif (entry === undefined) {\r\n\t\t\t\tentry = { read: [] };\r\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\r\n\t\t\t}\r\n\r\n\t\t\tentry.read.push(get_stack('TracedAt'));\r\n\t\t}\r\n\t}\r\n\r\n\tif (is_destroying_effect && old_values.has(signal)) {\r\n\t\treturn old_values.get(signal);\r\n\t}\r\n\r\n\treturn signal.v;\r\n}\r\n\r\n/**\r\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\r\n * @template V\r\n * @param {Value<V> | undefined} signal\r\n * @returns {V | undefined}\r\n */\r\nexport function safe_get(signal) {\r\n\treturn signal && get(signal);\r\n}\r\n\r\n/**\r\n * Capture an array of all the signals that are read when `fn` is called\r\n * @template T\r\n * @param {() => T} fn\r\n */\r\nfunction capture_signals(fn) {\r\n\tvar previous_captured_signals = captured_signals;\r\n\tcaptured_signals = new Set();\r\n\r\n\tvar captured = captured_signals;\r\n\tvar signal;\r\n\r\n\ttry {\r\n\t\tuntrack(fn);\r\n\t\tif (previous_captured_signals !== null) {\r\n\t\t\tfor (signal of captured_signals) {\r\n\t\t\t\tprevious_captured_signals.add(signal);\r\n\t\t\t}\r\n\t\t}\r\n\t} finally {\r\n\t\tcaptured_signals = previous_captured_signals;\r\n\t}\r\n\r\n\treturn captured;\r\n}\r\n\r\n/**\r\n * Invokes a function and captures all signals that are read during the invocation,\r\n * then invalidates them.\r\n * @param {() => any} fn\r\n */\r\nexport function invalidate_inner_signals(fn) {\r\n\tvar captured = capture_signals(() => untrack(fn));\r\n\r\n\tfor (var signal of captured) {\r\n\t\t// Go one level up because derived signals created as part of props in legacy mode\r\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\r\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\r\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\r\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\r\n\t\t\t\t\tinternal_set(dep, dep.v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinternal_set(signal, signal.v);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\r\n * any state read inside `fn` will not be treated as a dependency.\r\n *\r\n * ```ts\r\n * $effect(() => {\r\n *   // this will run when `data` changes, but not when `time` changes\r\n *   save(data, {\r\n *     timestamp: untrack(() => time)\r\n *   });\r\n * });\r\n * ```\r\n * @template T\r\n * @param {() => T} fn\r\n * @returns {T}\r\n */\r\nexport function untrack(fn) {\r\n\tvar previous_untracking = untracking;\r\n\ttry {\r\n\t\tuntracking = true;\r\n\t\treturn fn();\r\n\t} finally {\r\n\t\tuntracking = previous_untracking;\r\n\t}\r\n}\r\n\r\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\r\n\r\n/**\r\n * @param {Signal} signal\r\n * @param {number} status\r\n * @returns {void}\r\n */\r\nexport function set_signal_status(signal, status) {\r\n\tsignal.f = (signal.f & STATUS_MASK) | status;\r\n}\r\n\r\n/**\r\n * @param {Record<string, unknown>} obj\r\n * @param {string[]} keys\r\n * @returns {Record<string, unknown>}\r\n */\r\nexport function exclude_from_object(obj, keys) {\r\n\t/** @type {Record<string, unknown>} */\r\n\tvar result = {};\r\n\r\n\tfor (var key in obj) {\r\n\t\tif (!keys.includes(key)) {\r\n\t\t\tresult[key] = obj[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\r\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\r\n * @param {any} value\r\n * @returns {void}\r\n */\r\nexport function deep_read_state(value) {\r\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (STATE_SYMBOL in value) {\r\n\t\tdeep_read(value);\r\n\t} else if (!Array.isArray(value)) {\r\n\t\tfor (let key in value) {\r\n\t\t\tconst prop = value[key];\r\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\r\n\t\t\t\tdeep_read(prop);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Deeply traverse an object and read all its properties\r\n * so that they're all reactive in case this is `$state`\r\n * @param {any} value\r\n * @param {Set<any>} visited\r\n * @returns {void}\r\n */\r\nexport function deep_read(value, visited = new Set()) {\r\n\tif (\r\n\t\ttypeof value === 'object' &&\r\n\t\tvalue !== null &&\r\n\t\t// We don't want to traverse DOM elements\r\n\t\t!(value instanceof EventTarget) &&\r\n\t\t!visited.has(value)\r\n\t) {\r\n\t\tvisited.add(value);\r\n\t\t// When working with a possible SvelteDate, this\r\n\t\t// will ensure we capture changes to it.\r\n\t\tif (value instanceof Date) {\r\n\t\t\tvalue.getTime();\r\n\t\t}\r\n\t\tfor (let key in value) {\r\n\t\t\ttry {\r\n\t\t\t\tdeep_read(value[key], visited);\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// continue\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst proto = get_prototype_of(value);\r\n\t\tif (\r\n\t\t\tproto !== Object.prototype &&\r\n\t\t\tproto !== Array.prototype &&\r\n\t\t\tproto !== Map.prototype &&\r\n\t\t\tproto !== Set.prototype &&\r\n\t\t\tproto !== Date.prototype\r\n\t\t) {\r\n\t\t\tconst descriptors = get_descriptors(proto);\r\n\t\t\tfor (let key in descriptors) {\r\n\t\t\t\tconst get = descriptors[key].get;\r\n\t\t\t\tif (get) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tget.call(value);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// continue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\r\nimport {\r\n\tcheck_dirtiness,\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tupdate_effect,\r\n\tget,\r\n\tis_destroying_effect,\r\n\tremove_reactions,\r\n\tschedule_effect,\r\n\tset_active_reaction,\r\n\tset_is_destroying_effect,\r\n\tset_signal_status,\r\n\tuntrack,\r\n\tuntracking\r\n} from '../runtime.js';\r\nimport {\r\n\tDIRTY,\r\n\tBRANCH_EFFECT,\r\n\tRENDER_EFFECT,\r\n\tEFFECT,\r\n\tDESTROYED,\r\n\tINERT,\r\n\tEFFECT_RAN,\r\n\tBLOCK_EFFECT,\r\n\tROOT_EFFECT,\r\n\tEFFECT_TRANSPARENT,\r\n\tDERIVED,\r\n\tUNOWNED,\r\n\tCLEAN,\r\n\tINSPECT_EFFECT,\r\n\tHEAD_EFFECT,\r\n\tMAYBE_DIRTY,\r\n\tEFFECT_HAS_DERIVED,\r\n\tBOUNDARY_EFFECT\r\n} from '../constants.js';\r\nimport { set } from './sources.js';\r\nimport * as e from '../errors.js';\r\nimport { DEV } from 'esm-env';\r\nimport { define_property } from '../../shared/utils.js';\r\nimport { get_next_sibling } from '../dom/operations.js';\r\nimport { derived } from './deriveds.js';\r\nimport { component_context, dev_current_component_function } from '../context.js';\r\n\r\n/**\r\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\r\n */\r\nexport function validate_effect(rune) {\r\n\tif (active_effect === null && active_reaction === null) {\r\n\t\te.effect_orphan(rune);\r\n\t}\r\n\r\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\r\n\t\te.effect_in_unowned_derived();\r\n\t}\r\n\r\n\tif (is_destroying_effect) {\r\n\t\te.effect_in_teardown(rune);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n * @param {Effect} parent_effect\r\n */\r\nfunction push_effect(effect, parent_effect) {\r\n\tvar parent_last = parent_effect.last;\r\n\tif (parent_last === null) {\r\n\t\tparent_effect.last = parent_effect.first = effect;\r\n\t} else {\r\n\t\tparent_last.next = effect;\r\n\t\teffect.prev = parent_last;\r\n\t\tparent_effect.last = effect;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {number} type\r\n * @param {null | (() => void | (() => void))} fn\r\n * @param {boolean} sync\r\n * @param {boolean} push\r\n * @returns {Effect}\r\n */\r\nfunction create_effect(type, fn, sync, push = true) {\r\n\tvar parent = active_effect;\r\n\r\n\tif (DEV) {\r\n\t\t// Ensure the parent is never an inspect effect\r\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {Effect} */\r\n\tvar effect = {\r\n\t\tctx: component_context,\r\n\t\tdeps: null,\r\n\t\tnodes_start: null,\r\n\t\tnodes_end: null,\r\n\t\tf: type | DIRTY,\r\n\t\tfirst: null,\r\n\t\tfn,\r\n\t\tlast: null,\r\n\t\tnext: null,\r\n\t\tparent,\r\n\t\tprev: null,\r\n\t\tteardown: null,\r\n\t\ttransitions: null,\r\n\t\twv: 0\r\n\t};\r\n\r\n\tif (DEV) {\r\n\t\teffect.component_function = dev_current_component_function;\r\n\t}\r\n\r\n\tif (sync) {\r\n\t\ttry {\r\n\t\t\tupdate_effect(effect);\r\n\t\t\teffect.f |= EFFECT_RAN;\r\n\t\t} catch (e) {\r\n\t\t\tdestroy_effect(effect);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t} else if (fn !== null) {\r\n\t\tschedule_effect(effect);\r\n\t}\r\n\r\n\t// if an effect has no dependencies, no DOM and no teardown function,\r\n\t// don't bother adding it to the effect tree\r\n\tvar inert =\r\n\t\tsync &&\r\n\t\teffect.deps === null &&\r\n\t\teffect.first === null &&\r\n\t\teffect.nodes_start === null &&\r\n\t\teffect.teardown === null &&\r\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\r\n\r\n\tif (!inert && push) {\r\n\t\tif (parent !== null) {\r\n\t\t\tpush_effect(effect, parent);\r\n\t\t}\r\n\r\n\t\t// if we're in a derived, add the effect there too\r\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\r\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\r\n\t\t\t(derived.effects ??= []).push(effect);\r\n\t\t}\r\n\t}\r\n\r\n\treturn effect;\r\n}\r\n\r\n/**\r\n * Internal representation of `$effect.tracking()`\r\n * @returns {boolean}\r\n */\r\nexport function effect_tracking() {\r\n\treturn active_reaction !== null && !untracking;\r\n}\r\n\r\n/**\r\n * @param {() => void} fn\r\n */\r\nexport function teardown(fn) {\r\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\r\n\tset_signal_status(effect, CLEAN);\r\n\teffect.teardown = fn;\r\n\treturn effect;\r\n}\r\n\r\n/**\r\n * Internal representation of `$effect(...)`\r\n * @param {() => void | (() => void)} fn\r\n */\r\nexport function user_effect(fn) {\r\n\tvalidate_effect('$effect');\r\n\r\n\t// Non-nested `$effect(...)` in a component should be deferred\r\n\t// until the component is mounted\r\n\tvar defer =\r\n\t\tactive_effect !== null &&\r\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\r\n\t\tcomponent_context !== null &&\r\n\t\t!component_context.m;\r\n\r\n\tif (DEV) {\r\n\t\tdefine_property(fn, 'name', {\r\n\t\t\tvalue: '$effect'\r\n\t\t});\r\n\t}\r\n\r\n\tif (defer) {\r\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\r\n\t\t(context.e ??= []).push({\r\n\t\t\tfn,\r\n\t\t\teffect: active_effect,\r\n\t\t\treaction: active_reaction\r\n\t\t});\r\n\t} else {\r\n\t\tvar signal = effect(fn);\r\n\t\treturn signal;\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal representation of `$effect.pre(...)`\r\n * @param {() => void | (() => void)} fn\r\n * @returns {Effect}\r\n */\r\nexport function user_pre_effect(fn) {\r\n\tvalidate_effect('$effect.pre');\r\n\tif (DEV) {\r\n\t\tdefine_property(fn, 'name', {\r\n\t\t\tvalue: '$effect.pre'\r\n\t\t});\r\n\t}\r\n\treturn render_effect(fn);\r\n}\r\n\r\n/** @param {() => void | (() => void)} fn */\r\nexport function inspect_effect(fn) {\r\n\treturn create_effect(INSPECT_EFFECT, fn, true);\r\n}\r\n\r\n/**\r\n * Internal representation of `$effect.root(...)`\r\n * @param {() => void | (() => void)} fn\r\n * @returns {() => void}\r\n */\r\nexport function effect_root(fn) {\r\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\r\n\r\n\treturn () => {\r\n\t\tdestroy_effect(effect);\r\n\t};\r\n}\r\n\r\n/**\r\n * An effect root whose children can transition out\r\n * @param {() => void} fn\r\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\r\n */\r\nexport function component_root(fn) {\r\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\r\n\r\n\treturn (options = {}) => {\r\n\t\treturn new Promise((fulfil) => {\r\n\t\t\tif (options.outro) {\r\n\t\t\t\tpause_effect(effect, () => {\r\n\t\t\t\t\tdestroy_effect(effect);\r\n\t\t\t\t\tfulfil(undefined);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdestroy_effect(effect);\r\n\t\t\t\tfulfil(undefined);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {() => void | (() => void)} fn\r\n * @returns {Effect}\r\n */\r\nexport function effect(fn) {\r\n\treturn create_effect(EFFECT, fn, false);\r\n}\r\n\r\n/**\r\n * Internal representation of `$: ..`\r\n * @param {() => any} deps\r\n * @param {() => void | (() => void)} fn\r\n */\r\nexport function legacy_pre_effect(deps, fn) {\r\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\r\n\r\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\r\n\tvar token = { effect: null, ran: false };\r\n\tcontext.l.r1.push(token);\r\n\r\n\ttoken.effect = render_effect(() => {\r\n\t\tdeps();\r\n\r\n\t\t// If this legacy pre effect has already run before the end of the reset, then\r\n\t\t// bail out to emulate the same behavior.\r\n\t\tif (token.ran) return;\r\n\r\n\t\ttoken.ran = true;\r\n\t\tset(context.l.r2, true);\r\n\t\tuntrack(fn);\r\n\t});\r\n}\r\n\r\nexport function legacy_pre_effect_reset() {\r\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\r\n\r\n\trender_effect(() => {\r\n\t\tif (!get(context.l.r2)) return;\r\n\r\n\t\t// Run dirty `$:` statements\r\n\t\tfor (var token of context.l.r1) {\r\n\t\t\tvar effect = token.effect;\r\n\r\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\r\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\r\n\t\t\tif ((effect.f & CLEAN) !== 0) {\r\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\r\n\t\t\t}\r\n\r\n\t\t\tif (check_dirtiness(effect)) {\r\n\t\t\t\tupdate_effect(effect);\r\n\t\t\t}\r\n\r\n\t\t\ttoken.ran = false;\r\n\t\t}\r\n\r\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {() => void | (() => void)} fn\r\n * @returns {Effect}\r\n */\r\nexport function render_effect(fn) {\r\n\treturn create_effect(RENDER_EFFECT, fn, true);\r\n}\r\n\r\n/**\r\n * @param {(...expressions: any) => void | (() => void)} fn\r\n * @param {Array<() => any>} thunks\r\n * @returns {Effect}\r\n */\r\nexport function template_effect(fn, thunks = [], d = derived) {\r\n\tconst deriveds = thunks.map(d);\r\n\tconst effect = () => fn(...deriveds.map(get));\r\n\r\n\tif (DEV) {\r\n\t\tdefine_property(effect, 'name', {\r\n\t\t\tvalue: '{expression}'\r\n\t\t});\r\n\t}\r\n\r\n\treturn block(effect);\r\n}\r\n\r\n/**\r\n * @param {(() => void)} fn\r\n * @param {number} flags\r\n */\r\nexport function block(fn, flags = 0) {\r\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\r\n}\r\n\r\n/**\r\n * @param {(() => void)} fn\r\n * @param {boolean} [push]\r\n */\r\nexport function branch(fn, push = true) {\r\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n */\r\nexport function execute_effect_teardown(effect) {\r\n\tvar teardown = effect.teardown;\r\n\tif (teardown !== null) {\r\n\t\tconst previously_destroying_effect = is_destroying_effect;\r\n\t\tconst previous_reaction = active_reaction;\r\n\t\tset_is_destroying_effect(true);\r\n\t\tset_active_reaction(null);\r\n\t\ttry {\r\n\t\t\tteardown.call(null);\r\n\t\t} finally {\r\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\r\n\t\t\tset_active_reaction(previous_reaction);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} signal\r\n * @param {boolean} remove_dom\r\n * @returns {void}\r\n */\r\nexport function destroy_effect_children(signal, remove_dom = false) {\r\n\tvar effect = signal.first;\r\n\tsignal.first = signal.last = null;\r\n\r\n\twhile (effect !== null) {\r\n\t\tvar next = effect.next;\r\n\r\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\r\n\t\t\t// this is now an independent root\r\n\t\t\teffect.parent = null;\r\n\t\t} else {\r\n\t\t\tdestroy_effect(effect, remove_dom);\r\n\t\t}\r\n\r\n\t\teffect = next;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} signal\r\n * @returns {void}\r\n */\r\nexport function destroy_block_effect_children(signal) {\r\n\tvar effect = signal.first;\r\n\r\n\twhile (effect !== null) {\r\n\t\tvar next = effect.next;\r\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\r\n\t\t\tdestroy_effect(effect);\r\n\t\t}\r\n\t\teffect = next;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n * @param {boolean} [remove_dom]\r\n * @returns {void}\r\n */\r\nexport function destroy_effect(effect, remove_dom = true) {\r\n\tvar removed = false;\r\n\r\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\r\n\t\t/** @type {TemplateNode | null} */\r\n\t\tvar node = effect.nodes_start;\r\n\t\tvar end = effect.nodes_end;\r\n\r\n\t\twhile (node !== null) {\r\n\t\t\t/** @type {TemplateNode | null} */\r\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\r\n\r\n\t\t\tnode.remove();\r\n\t\t\tnode = next;\r\n\t\t}\r\n\r\n\t\tremoved = true;\r\n\t}\r\n\r\n\tdestroy_effect_children(effect, remove_dom && !removed);\r\n\tremove_reactions(effect, 0);\r\n\tset_signal_status(effect, DESTROYED);\r\n\r\n\tvar transitions = effect.transitions;\r\n\r\n\tif (transitions !== null) {\r\n\t\tfor (const transition of transitions) {\r\n\t\t\ttransition.stop();\r\n\t\t}\r\n\t}\r\n\r\n\texecute_effect_teardown(effect);\r\n\r\n\tvar parent = effect.parent;\r\n\r\n\t// If the parent doesn't have any children, then skip this work altogether\r\n\tif (parent !== null && parent.first !== null) {\r\n\t\tunlink_effect(effect);\r\n\t}\r\n\r\n\tif (DEV) {\r\n\t\teffect.component_function = null;\r\n\t}\r\n\r\n\t// `first` and `child` are nulled out in destroy_effect_children\r\n\t// we don't null out `parent` so that error propagation can work correctly\r\n\teffect.next =\r\n\t\teffect.prev =\r\n\t\teffect.teardown =\r\n\t\teffect.ctx =\r\n\t\teffect.deps =\r\n\t\teffect.fn =\r\n\t\teffect.nodes_start =\r\n\t\teffect.nodes_end =\r\n\t\t\tnull;\r\n}\r\n\r\n/**\r\n * Detach an effect from the effect tree, freeing up memory and\r\n * reducing the amount of work that happens on subsequent traversals\r\n * @param {Effect} effect\r\n */\r\nexport function unlink_effect(effect) {\r\n\tvar parent = effect.parent;\r\n\tvar prev = effect.prev;\r\n\tvar next = effect.next;\r\n\r\n\tif (prev !== null) prev.next = next;\r\n\tif (next !== null) next.prev = prev;\r\n\r\n\tif (parent !== null) {\r\n\t\tif (parent.first === effect) parent.first = next;\r\n\t\tif (parent.last === effect) parent.last = prev;\r\n\t}\r\n}\r\n\r\n/**\r\n * When a block effect is removed, we don't immediately destroy it or yank it\r\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\r\n * It stays around (in memory, and in the DOM) until outro transitions have\r\n * completed, and if the state change is reversed then we _resume_ it.\r\n * A paused effect does not update, and the DOM subtree becomes inert.\r\n * @param {Effect} effect\r\n * @param {() => void} [callback]\r\n */\r\nexport function pause_effect(effect, callback) {\r\n\t/** @type {TransitionManager[]} */\r\n\tvar transitions = [];\r\n\r\n\tpause_children(effect, transitions, true);\r\n\r\n\trun_out_transitions(transitions, () => {\r\n\t\tdestroy_effect(effect);\r\n\t\tif (callback) callback();\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {TransitionManager[]} transitions\r\n * @param {() => void} fn\r\n */\r\nexport function run_out_transitions(transitions, fn) {\r\n\tvar remaining = transitions.length;\r\n\tif (remaining > 0) {\r\n\t\tvar check = () => --remaining || fn();\r\n\t\tfor (var transition of transitions) {\r\n\t\t\ttransition.out(check);\r\n\t\t}\r\n\t} else {\r\n\t\tfn();\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n * @param {TransitionManager[]} transitions\r\n * @param {boolean} local\r\n */\r\nexport function pause_children(effect, transitions, local) {\r\n\tif ((effect.f & INERT) !== 0) return;\r\n\teffect.f ^= INERT;\r\n\r\n\tif (effect.transitions !== null) {\r\n\t\tfor (const transition of effect.transitions) {\r\n\t\t\tif (transition.is_global || local) {\r\n\t\t\t\ttransitions.push(transition);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar child = effect.first;\r\n\r\n\twhile (child !== null) {\r\n\t\tvar sibling = child.next;\r\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\r\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\r\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\r\n\t\t// through the tree.\r\n\t\tpause_children(child, transitions, transparent ? local : false);\r\n\t\tchild = sibling;\r\n\t}\r\n}\r\n\r\n/**\r\n * The opposite of `pause_effect`. We call this if (for example)\r\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\r\n * @param {Effect} effect\r\n */\r\nexport function resume_effect(effect) {\r\n\tresume_children(effect, true);\r\n}\r\n\r\n/**\r\n * @param {Effect} effect\r\n * @param {boolean} local\r\n */\r\nfunction resume_children(effect, local) {\r\n\tif ((effect.f & INERT) === 0) return;\r\n\teffect.f ^= INERT;\r\n\r\n\t// Ensure the effect is marked as clean again so that any dirty child\r\n\t// effects can schedule themselves for execution\r\n\tif ((effect.f & CLEAN) === 0) {\r\n\t\teffect.f ^= CLEAN;\r\n\t}\r\n\r\n\t// If a dependency of this effect changed while it was paused,\r\n\t// schedule the effect to update\r\n\tif (check_dirtiness(effect)) {\r\n\t\tset_signal_status(effect, DIRTY);\r\n\t\tschedule_effect(effect);\r\n\t}\r\n\r\n\tvar child = effect.first;\r\n\r\n\twhile (child !== null) {\r\n\t\tvar sibling = child.next;\r\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\r\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\r\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\r\n\t\t// through the tree.\r\n\t\tresume_children(child, transparent ? local : false);\r\n\t\tchild = sibling;\r\n\t}\r\n\r\n\tif (effect.transitions !== null) {\r\n\t\tfor (const transition of effect.transitions) {\r\n\t\t\tif (transition.is_global || local) {\r\n\t\t\t\ttransition.in();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "/** @import { Derived, Reaction, Signal, Value } from '#client' */\r\nimport { UNINITIALIZED } from '../../../constants.js';\r\nimport { snapshot } from '../../shared/clone.js';\r\nimport { define_property } from '../../shared/utils.js';\r\nimport { DERIVED, STATE_SYMBOL } from '../constants.js';\r\nimport { effect_tracking } from '../reactivity/effects.js';\r\nimport { active_reaction, captured_signals, set_captured_signals, untrack } from '../runtime.js';\r\n\r\n/** @type { any } */\r\nexport let tracing_expressions = null;\r\n\r\n/**\r\n * @param { Value } signal\r\n * @param { { read: Error[] } } [entry]\r\n */\r\nfunction log_entry(signal, entry) {\r\n\tconst debug = signal.debug;\r\n\tconst value = signal.trace_need_increase ? signal.trace_v : signal.v;\r\n\r\n\tif (value === UNINITIALIZED) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (debug) {\r\n\t\tvar previous_captured_signals = captured_signals;\r\n\t\tvar captured = new Set();\r\n\t\tset_captured_signals(captured);\r\n\t\ttry {\r\n\t\t\tuntrack(() => {\r\n\t\t\t\tdebug();\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tset_captured_signals(previous_captured_signals);\r\n\t\t}\r\n\t\tif (captured.size > 0) {\r\n\t\t\tfor (const dep of captured) {\r\n\t\t\t\tlog_entry(dep);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tconst type = (signal.f & DERIVED) !== 0 ? '$derived' : '$state';\r\n\tconst current_reaction = /** @type {Reaction} */ (active_reaction);\r\n\tconst dirty = signal.wv > current_reaction.wv || current_reaction.wv === 0;\r\n\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.groupCollapsed(\r\n\t\t`%c${type}`,\r\n\t\tdirty ? 'color: CornflowerBlue; font-weight: bold' : 'color: grey; font-weight: bold',\r\n\t\ttypeof value === 'object' && value !== null && STATE_SYMBOL in value\r\n\t\t\t? snapshot(value, true)\r\n\t\t\t: value\r\n\t);\r\n\r\n\tif (type === '$derived') {\r\n\t\tconst deps = new Set(/** @type {Derived} */ (signal).deps);\r\n\t\tfor (const dep of deps) {\r\n\t\t\tlog_entry(dep);\r\n\t\t}\r\n\t}\r\n\r\n\tif (signal.created) {\r\n\t\t// eslint-disable-next-line no-console\r\n\t\tconsole.log(signal.created);\r\n\t}\r\n\r\n\tif (signal.updated) {\r\n\t\t// eslint-disable-next-line no-console\r\n\t\tconsole.log(signal.updated);\r\n\t}\r\n\r\n\tconst read = entry?.read;\r\n\r\n\tif (read && read.length > 0) {\r\n\t\tfor (var stack of read) {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log(stack);\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.groupEnd();\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {() => string} label\r\n * @param {() => T} fn\r\n */\r\nexport function trace(label, fn) {\r\n\tvar previously_tracing_expressions = tracing_expressions;\r\n\ttry {\r\n\t\ttracing_expressions = { entries: new Map(), reaction: active_reaction };\r\n\r\n\t\tvar start = performance.now();\r\n\t\tvar value = fn();\r\n\t\tvar time = (performance.now() - start).toFixed(2);\r\n\r\n\t\tif (!effect_tracking()) {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log(`${label()} %cran outside of an effect (${time}ms)`, 'color: grey');\r\n\t\t} else if (tracing_expressions.entries.size === 0) {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log(`${label()} %cno reactive dependencies (${time}ms)`, 'color: grey');\r\n\t\t} else {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.group(`${label()} %c(${time}ms)`, 'color: grey');\r\n\r\n\t\t\tvar entries = tracing_expressions.entries;\r\n\r\n\t\t\ttracing_expressions = null;\r\n\r\n\t\t\tfor (const [signal, entry] of entries) {\r\n\t\t\t\tlog_entry(signal, entry);\r\n\t\t\t}\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.groupEnd();\r\n\t\t}\r\n\r\n\t\tif (previously_tracing_expressions !== null && tracing_expressions !== null) {\r\n\t\t\tfor (const [signal, entry] of tracing_expressions.entries) {\r\n\t\t\t\tvar prev_entry = previously_tracing_expressions.get(signal);\r\n\r\n\t\t\t\tif (prev_entry === undefined) {\r\n\t\t\t\t\tpreviously_tracing_expressions.set(signal, entry);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprev_entry.read.push(...entry.read);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t} finally {\r\n\t\ttracing_expressions = previously_tracing_expressions;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} label\r\n */\r\nexport function get_stack(label) {\r\n\tlet error = Error();\r\n\tconst stack = error.stack;\r\n\r\n\tif (stack) {\r\n\t\tconst lines = stack.split('\\n');\r\n\t\tconst new_lines = ['\\n'];\r\n\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tconst line = lines[i];\r\n\r\n\t\t\tif (line === 'Error') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (line.includes('validate_each_keys')) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (line.includes('svelte/src/internal')) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tnew_lines.push(line);\r\n\t\t}\r\n\r\n\t\tif (new_lines.length === 1) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tdefine_property(error, 'stack', {\r\n\t\t\tvalue: new_lines.join('\\n')\r\n\t\t});\r\n\r\n\t\tdefine_property(error, 'name', {\r\n\t\t\t// 'Error' suffix is required for stack traces to be rendered properly\r\n\t\t\tvalue: `${label}Error`\r\n\t\t});\r\n\t}\r\n\treturn error;\r\n}\r\n", "import { hydrating } from '../hydration.js';\r\nimport { clear_text_content, get_first_child } from '../operations.js';\r\nimport { queue_micro_task } from '../task.js';\r\n\r\n/**\r\n * @param {HTMLElement} dom\r\n * @param {boolean} value\r\n * @returns {void}\r\n */\r\nexport function autofocus(dom, value) {\r\n\tif (value) {\r\n\t\tconst body = document.body;\r\n\t\tdom.autofocus = true;\r\n\r\n\t\tqueue_micro_task(() => {\r\n\t\t\tif (document.activeElement === body) {\r\n\t\t\t\tdom.focus();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * The child of a textarea actually corresponds to the defaultValue property, so we need\r\n * to remove it upon hydration to avoid a bug when someone resets the form value.\r\n * @param {HTMLTextAreaElement} dom\r\n * @returns {void}\r\n */\r\nexport function remove_textarea_child(dom) {\r\n\tif (hydrating && get_first_child(dom) !== null) {\r\n\t\tclear_text_content(dom);\r\n\t}\r\n}\r\n\r\nlet listening_to_form_reset = false;\r\n\r\nexport function add_form_reset_listener() {\r\n\tif (!listening_to_form_reset) {\r\n\t\tlistening_to_form_reset = true;\r\n\t\tdocument.addEventListener(\r\n\t\t\t'reset',\r\n\t\t\t(evt) => {\r\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\r\n\t\t\t\t// elements have not updated to their reset values yet\r\n\t\t\t\tPromise.resolve().then(() => {\r\n\t\t\t\t\tif (!evt.defaultPrevented) {\r\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\r\n\t\t\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\t\t\te.__on_r?.();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\r\n\t\t\t{ capture: true }\r\n\t\t);\r\n\t}\r\n}\r\n", "import { teardown } from '../../../reactivity/effects.js';\r\nimport {\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tset_active_effect,\r\n\tset_active_reaction\r\n} from '../../../runtime.js';\r\nimport { add_form_reset_listener } from '../misc.js';\r\n\r\n/**\r\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\r\n * then listens to the given events until the render effect context is destroyed\r\n * @param {EventTarget} target\r\n * @param {Array<string>} events\r\n * @param {(event?: Event) => void} handler\r\n * @param {any} call_handler_immediately\r\n */\r\nexport function listen(target, events, handler, call_handler_immediately = true) {\r\n\tif (call_handler_immediately) {\r\n\t\thandler();\r\n\t}\r\n\r\n\tfor (var name of events) {\r\n\t\ttarget.addEventListener(name, handler);\r\n\t}\r\n\r\n\tteardown(() => {\r\n\t\tfor (var name of events) {\r\n\t\t\ttarget.removeEventListener(name, handler);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {() => T} fn\r\n */\r\nexport function without_reactive_context(fn) {\r\n\tvar previous_reaction = active_reaction;\r\n\tvar previous_effect = active_effect;\r\n\tset_active_reaction(null);\r\n\tset_active_effect(null);\r\n\ttry {\r\n\t\treturn fn();\r\n\t} finally {\r\n\t\tset_active_reaction(previous_reaction);\r\n\t\tset_active_effect(previous_effect);\r\n\t}\r\n}\r\n\r\n/**\r\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\r\n * to notify all bindings when the form is reset\r\n * @param {HTMLElement} element\r\n * @param {string} event\r\n * @param {(is_reset?: true) => void} handler\r\n * @param {(is_reset?: true) => void} [on_reset]\r\n */\r\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\r\n\telement.addEventListener(event, () => without_reactive_context(handler));\r\n\t// @ts-expect-error\r\n\tconst prev = element.__on_r;\r\n\tif (prev) {\r\n\t\t// special case for checkbox that can have multiple binds (group & checked)\r\n\t\t// @ts-expect-error\r\n\t\telement.__on_r = () => {\r\n\t\t\tprev();\r\n\t\t\ton_reset(true);\r\n\t\t};\r\n\t} else {\r\n\t\t// @ts-expect-error\r\n\t\telement.__on_r = () => on_reset(true);\r\n\t}\r\n\r\n\tadd_form_reset_listener();\r\n}\r\n", "/** @import { Location } from 'locate-character' */\r\nimport { teardown } from '../../reactivity/effects.js';\r\nimport { define_property, is_array } from '../../../shared/utils.js';\r\nimport { hydrating } from '../hydration.js';\r\nimport { queue_micro_task } from '../task.js';\r\nimport { FILENAME } from '../../../../constants.js';\r\nimport * as w from '../../warnings.js';\r\nimport {\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tset_active_effect,\r\n\tset_active_reaction\r\n} from '../../runtime.js';\r\nimport { without_reactive_context } from './bindings/shared.js';\r\n\r\n/** @type {Set<string>} */\r\nexport const all_registered_events = new Set();\r\n\r\n/** @type {Set<(events: Array<string>) => void>} */\r\nexport const root_event_handles = new Set();\r\n\r\n/**\r\n * SSR adds onload and onerror attributes to catch those events before the hydration.\r\n * This function detects those cases, removes the attributes and replays the events.\r\n * @param {HTMLElement} dom\r\n */\r\nexport function replay_events(dom) {\r\n\tif (!hydrating) return;\r\n\r\n\tif (dom.onload) {\r\n\t\tdom.removeAttribute('onload');\r\n\t}\r\n\tif (dom.onerror) {\r\n\t\tdom.removeAttribute('onerror');\r\n\t}\r\n\t// @ts-expect-error\r\n\tconst event = dom.__e;\r\n\tif (event !== undefined) {\r\n\t\t// @ts-expect-error\r\n\t\tdom.__e = undefined;\r\n\t\tqueueMicrotask(() => {\r\n\t\t\tif (dom.isConnected) {\r\n\t\t\t\tdom.dispatchEvent(event);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} event_name\r\n * @param {EventTarget} dom\r\n * @param {EventListener} [handler]\r\n * @param {AddEventListenerOptions} [options]\r\n */\r\nexport function create_event(event_name, dom, handler, options = {}) {\r\n\t/**\r\n\t * @this {EventTarget}\r\n\t */\r\n\tfunction target_handler(/** @type {Event} */ event) {\r\n\t\tif (!options.capture) {\r\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\r\n\t\t\thandle_event_propagation.call(dom, event);\r\n\t\t}\r\n\t\tif (!event.cancelBubble) {\r\n\t\t\treturn without_reactive_context(() => {\r\n\t\t\t\treturn handler?.call(this, event);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\r\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\r\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\r\n\t// this bug. The same applies to wheel events and touch events.\r\n\tif (\r\n\t\tevent_name.startsWith('pointer') ||\r\n\t\tevent_name.startsWith('touch') ||\r\n\t\tevent_name === 'wheel'\r\n\t) {\r\n\t\tqueue_micro_task(() => {\r\n\t\t\tdom.addEventListener(event_name, target_handler, options);\r\n\t\t});\r\n\t} else {\r\n\t\tdom.addEventListener(event_name, target_handler, options);\r\n\t}\r\n\r\n\treturn target_handler;\r\n}\r\n\r\n/**\r\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\r\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\r\n * (with attributes like `onclick`), which use event delegation for performance reasons\r\n *\r\n * @param {EventTarget} element\r\n * @param {string} type\r\n * @param {EventListener} handler\r\n * @param {AddEventListenerOptions} [options]\r\n */\r\nexport function on(element, type, handler, options = {}) {\r\n\tvar target_handler = create_event(type, element, handler, options);\r\n\r\n\treturn () => {\r\n\t\telement.removeEventListener(type, target_handler, options);\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {string} event_name\r\n * @param {Element} dom\r\n * @param {EventListener} [handler]\r\n * @param {boolean} [capture]\r\n * @param {boolean} [passive]\r\n * @returns {void}\r\n */\r\nexport function event(event_name, dom, handler, capture, passive) {\r\n\tvar options = { capture, passive };\r\n\tvar target_handler = create_event(event_name, dom, handler, options);\r\n\r\n\t// @ts-ignore\r\n\tif (dom === document.body || dom === window || dom === document) {\r\n\t\tteardown(() => {\r\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Array<string>} events\r\n * @returns {void}\r\n */\r\nexport function delegate(events) {\r\n\tfor (var i = 0; i < events.length; i++) {\r\n\t\tall_registered_events.add(events[i]);\r\n\t}\r\n\r\n\tfor (var fn of root_event_handles) {\r\n\t\tfn(events);\r\n\t}\r\n}\r\n\r\n/**\r\n * @this {EventTarget}\r\n * @param {Event} event\r\n * @returns {void}\r\n */\r\nexport function handle_event_propagation(event) {\r\n\tvar handler_element = this;\r\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\r\n\tvar event_name = event.type;\r\n\tvar path = event.composedPath?.() || [];\r\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\r\n\r\n\t// composedPath contains list of nodes the event has propagated through.\r\n\t// We check __root to skip all nodes below it in case this is a\r\n\t// parent of the __root node, which indicates that there's nested\r\n\t// mounted apps. In this case we don't want to trigger events multiple times.\r\n\tvar path_idx = 0;\r\n\r\n\t// @ts-expect-error is added below\r\n\tvar handled_at = event.__root;\r\n\r\n\tif (handled_at) {\r\n\t\tvar at_idx = path.indexOf(handled_at);\r\n\t\tif (\r\n\t\t\tat_idx !== -1 &&\r\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\r\n\t\t) {\r\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\r\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\r\n\t\t\t// chain in case someone manually dispatches the same event object again.\r\n\t\t\t// @ts-expect-error\r\n\t\t\tevent.__root = handler_element;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We're deliberately not skipping if the index is higher, because\r\n\t\t// someone could create an event programmatically and emit it multiple times,\r\n\t\t// in which case we want to handle the whole propagation chain properly each time.\r\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\r\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\r\n\t\tvar handler_idx = path.indexOf(handler_element);\r\n\t\tif (handler_idx === -1) {\r\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\r\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (at_idx <= handler_idx) {\r\n\t\t\tpath_idx = at_idx;\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\r\n\t// there can only be one delegated event per element, and we either already handled the current target,\r\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\r\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\r\n\tif (current_target === handler_element) return;\r\n\r\n\t// Proxy currentTarget to correct target\r\n\tdefine_property(event, 'currentTarget', {\r\n\t\tconfigurable: true,\r\n\t\tget() {\r\n\t\t\treturn current_target || owner_document;\r\n\t\t}\r\n\t});\r\n\r\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\r\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\r\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\r\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\r\n\t// an event handler to run in the context of another reaction or effect.\r\n\tvar previous_reaction = active_reaction;\r\n\tvar previous_effect = active_effect;\r\n\tset_active_reaction(null);\r\n\tset_active_effect(null);\r\n\r\n\ttry {\r\n\t\t/**\r\n\t\t * @type {unknown}\r\n\t\t */\r\n\t\tvar throw_error;\r\n\t\t/**\r\n\t\t * @type {unknown[]}\r\n\t\t */\r\n\t\tvar other_errors = [];\r\n\r\n\t\twhile (current_target !== null) {\r\n\t\t\t/** @type {null | Element} */\r\n\t\t\tvar parent_element =\r\n\t\t\t\tcurrent_target.assignedSlot ||\r\n\t\t\t\tcurrent_target.parentNode ||\r\n\t\t\t\t/** @type {any} */ (current_target).host ||\r\n\t\t\t\tnull;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// @ts-expect-error\r\n\t\t\t\tvar delegated = current_target['__' + event_name];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tdelegated != null &&\r\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\r\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\r\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\r\n\t\t\t\t\t\tevent.target === current_target)\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (is_array(delegated)) {\r\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\r\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdelegated.call(current_target, event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (throw_error) {\r\n\t\t\t\t\tother_errors.push(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow_error = error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcurrent_target = parent_element;\r\n\t\t}\r\n\r\n\t\tif (throw_error) {\r\n\t\t\tfor (let error of other_errors) {\r\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\r\n\t\t\t\tqueueMicrotask(() => {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthrow throw_error;\r\n\t\t}\r\n\t} finally {\r\n\t\t// @ts-expect-error is used above\r\n\t\tevent.__root = handler_element;\r\n\t\t// @ts-ignore remove proxy on currentTarget\r\n\t\tdelete event.currentTarget;\r\n\t\tset_active_reaction(previous_reaction);\r\n\t\tset_active_effect(previous_effect);\r\n\t}\r\n}\r\n\r\n/**\r\n * In dev, warn if an event handler is not a function, as it means the\r\n * user probably called the handler or forgot to add a `() =>`\r\n * @param {() => (event: Event, ...args: any) => void} thunk\r\n * @param {EventTarget} element\r\n * @param {[Event, ...any]} args\r\n * @param {any} component\r\n * @param {[number, number]} [loc]\r\n * @param {boolean} [remove_parens]\r\n */\r\nexport function apply(\r\n\tthunk,\r\n\telement,\r\n\targs,\r\n\tcomponent,\r\n\tloc,\r\n\thas_side_effects = false,\r\n\tremove_parens = false\r\n) {\r\n\tlet handler;\r\n\tlet error;\r\n\r\n\ttry {\r\n\t\thandler = thunk();\r\n\t} catch (e) {\r\n\t\terror = e;\r\n\t}\r\n\r\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\r\n\t\tconst filename = component?.[FILENAME];\r\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\r\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\r\n\t\tconst event_name = args[0]?.type + phase;\r\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\r\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\r\n\r\n\t\tw.event_handler_invalid(description, suggestion);\r\n\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\thandler?.apply(element, args);\r\n}\r\n"],
  "mappings": "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",
  "names": ["fallback", "stack", "next", "component_context", "stack", "get_stack", "source", "effect", "get_stack", "derived", "next", "stack", "get_stack", "_a", "source", "value", "key", "array_prototype", "equals", "child", "effect", "derived", "component_context", "stack", "teardown", "child", "get_stack", "get", "effect", "push", "derived", "teardown", "next", "child", "sibling", "stack", "get_stack", "name", "event", "event"]
}
